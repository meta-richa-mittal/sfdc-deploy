<apex:component controller="GlobalController">

    <full-page-modal id-value="VendorOrderCustomFormatModal" class-value="bp-full-page-modal" close-action="F_VOCF.closeCustomFormatModel()">
        <div class="bp-wrapper-container">
            <div class="custom-format-container">
                <h1 class="heading">{{'Custom_order_export_format' | translate}}</h1>
                <h1 class="sub-heading" ng-if="M_VOCF.customVOExportWrapper.Id">{{M_VOCF.VendorName}}</h1>
                <div class="rowSection">
                    <label class="custom-format-label">{{'Name_your_format' | translate}}<span class="FC9">*</span></label>
                    <div class="editableDescInput" ng-class="{'focusInput': setBotrderOnSpan}">
                        <input class="large-c-input-search" ng-class="{'c-red-border': M_VOCF.isError[M_VOCF.customVOExportWrapper.FileName]}" ng-model="M_VOCF.customVOExportWrapper.FileName" 
                        ng-focus="setBotrderOnSpan = true;" ng-blur="setBotrderOnSpan = false;F_VOCF.validateFormatField(M_VOCF.customVOExportWrapper.FileName);" placeholder="Enter format name" type="text" 
                        ng-disabled="M_VOCF.isBtnSpinnerLoading" />
                    </div>
                </div>
                <div class="rowSection">
                    <label class="custom-format-label">{{'Pick_your_file_type' | translate}}<span class="FC9">*</span></label>
                    <div class="flex-container">
                        <div class="bp-cell searchInputArea export-dropdown custom-format-dropdown" ng-class = "{'showingOverlay' : M_VOCF.showFileTypeDropDown}" >
                            <input  type="text" id="fileTypeInput" class="large-c-input-search" 
                            ng-focus="M_VOCF.showFileTypeDropDown = true"
                            ng-blur  = "M_VOCF.showFileTypeDropDown = false; F_VOCF.validateFormatField(M_VOCF.customVOExportWrapper.FileType);"
                            ng-class="{'c-red-border': M_VOCF.isError[M_VOCF.customVOExportWrapper.FileType]}"
                            ng-disabled="M_VOCF.isBtnSpinnerLoading"
                            ng-model="M_VOCF.FileType" placeholder="Please select" readonly="readonly" autocomplete="off"/> 
                            <i class="bp-icons bp-font-14 bp-blue-font bp-cursor-pointer stroke-5 downArrow dfDownArrow" ng-click="F_VOCF.setFocusOnInput('fileTypeInput')">arrowDown</i>
                            <div class="searchResultOverlay" id="fileTypeDropDownDiv">
                                <ul>
                                    <li ng-repeat="fileType in M_VOCF.fileTypeMap track by $index"
                                        ng-mousedown="M_VOCF.FileType = fileType.Name; M_VOCF.showFileTypeDropDown = false; F_VOCF.setSelectedFileType(fileType)"
                                        id="fileType{{$index}}">
                                        <div class="fullName text-capitalize">{{fileType.Name}}</div>
                                    </li>  
                                </ul> 
                            </div>
                        </div>

                        <div ng-if="F_VOCF.isFormattedTextDocumentSelected()" class="bp-cell searchInputArea export-dropdown custom-format-dropdown" ng-class = "{'showingOverlay' : M_VOCF.showdelimiterTypeDropdown}">
                            <input  type="text" id="delimiterTypeInput" class="large-c-input-search first-letter-capitalize" 
                            ng-focus="M_VOCF.showdelimiterTypeDropdown = true"
                            ng-blur  = "M_VOCF.showdelimiterTypeDropdown = false; F_VOCF.validateFormatField(M_VOCF.customVOExportWrapper.DelimiterTextValue);"
                            ng-class="{'c-red-border': M_VOCF.isError[M_VOCF.customVOExportWrapper.DelimiterTextValue]}"
                            ng-disabled="M_VOCF.isBtnSpinnerLoading"
                            ng-model="M_VOCF.customVOExportWrapper.DelimiterTextValue" placeholder="Pick delimiter for file" readonly="readonly" autocomplete="off"/> 
                            <i class="bp-icons bp-font-14 bp-blue-font bp-cursor-pointer stroke-5 downArrow dfDownArrow" ng-click="F_VOCF.setFocusOnInput('delimiterTypeInput')">arrowDown</i>
                            <div class="searchResultOverlay" id="delimiterTypeDropDownDiv">
                                <ul>
                                    <li ng-repeat="delimiterType in M_VOCF.delimiterTypeMap track by $index"
                                        ng-mousedown="M_VOCF.customVOExportWrapper.DelimiterTextValue = delimiterType.Name; M_VOCF.showdelimiterTypeDropdown = false;F_VOCF.removeDelimiterValue()"
                                        id="delimiterType{{$index}}">
                                        <div class="fullName text-capitalize">{{delimiterType.Name}}</div>
                                    </li>  
                                </ul> 
                            </div>
                        </div>

                        <div ng-if="F_VOCF.isOtherSelected()">
                            <input type="text" class="large-c-input-search other-input" placeholder="Enter value" 
                                ng-disabled="M_VOCF.isBtnSpinnerLoading" ng-blur="F_VOCF.validateFormatField(M_VOCF.customVOExportWrapper.Delimiter);"
                                ng-class="{'c-red-border': M_VOCF.isError[M_VOCF.customVOExportWrapper.Delimiter]}"
                                ng-model="M_VOCF.customVOExportWrapper.Delimiter" maxlength="3" />
                        </div>

                    </div>
                </div>
                <div class="rowSection c-slider-container">
                    <label class="custom-format-label">{{'Include_column_headers' | translate}}</label>
                    <label class="c-bp-switch column-header">
                        <input class="c-slider-input" ng-disabled="M_VOCF.isBtnSpinnerLoading" ng-model="M_VOCF.customVOExportWrapper.IncludeColumnHeader" type="checkbox" />
                       <div class="c-bp-slider" ng-class="{'c-checkd-slider':M_VOCF.customVOExportWrapper.IncludeColumnHeader}"></div>
                    </label>
                </div>


                <div class="rowSection customise-data-modal">
                    <h1 class="c-heading MB25">{{'Customise_your_data' | translate}}</h1>
                    <div class="table-responsive">
                        <table class="bp-editable-table">
                            <colgroup>
                                <col width="5%"/>
                                <col width="25%"/>
                                <col width="30%"/>
                                <col width="30%"/>
                                <col width="10%"/>
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="customise-data-header">{{'Label_Order' | translate}}</th>
                                    <th class="customise-data-header">{{'Blackpurl_column' | translate}}</th>
                                    <th class="customise-data-header">{{'Your_new_column_header' | translate}}</th>
                                    <th class="customise-data-header"><div ng-if="F_VOCF.isUserDefineValue()">{{'Define_value' | translate}}</div></th>
                                    <th class="customise-data-header"></th>
                                </tr>
                            </thead>
                            <tbody dnd-list="M_VOCF.customVOExportWrapper.ColumnDetailList" dnd-dragover="F_VOCF.dragOverCallBack(index, external, type, callback)"
                                dnd-drop="F_VOCF.dropCallBack(index, item, external, type)" >
                                <tr ng-repeat="columnDetail in M_VOCF.customVOExportWrapper.ColumnDetailList track by $index" ng-init = "tableRowIndex = $index"
                                    dnd-draggable="columnDetail" dnd-effect-allowed="move" dnd-selected="M_VOCF.selected = columnDetail" ng-class="{'selected': M_VOCF.selected == columnDetail, 'not-allowed-cursor':(!columnDetail.isDelete && !columnDetail.ColumnName)}"
                                    dnd-dragstart="F_VOCF.dragStartCallBack($index, columnDetail)" dnd-disable-if="!columnDetail.isDelete && !columnDetail.ColumnName">
                                    <td ng-if="!columnDetail.isDelete" class="customise-data-body">{{columnDetail.OrderNumber}}</td>
                                    <td ng-if="!columnDetail.isDelete" class="customise-data-body" id="customise_data_section{{tableRowIndex}}">
                                        <i class="bp-icons bp-font-18 bp-light-grey-font c-drag-icon">drag</i>
                                        <div class="liItemDesc_setTextEllipsis" ng-if="(!M_VOCF.editRow[tableRowIndex] || columnDetail.ColumnName == 'Part number' || columnDetail.ColumnName == 'Needed qty')">
                                            <label ng-if="columnDetail.ColumnName" class="blackpurl-column">{{columnDetail.ColumnName}}</label>
                                            <label ng-if="!columnDetail.ColumnName" class="blackpurl-column">- - - - - - - - - - - - -</label>
                                        </div>

                                        <div ng-if="(M_VOCF.editRow[tableRowIndex] && !(columnDetail.ColumnName == 'Part number' || columnDetail.ColumnName == 'Needed qty'))" class="bp-cell searchInputArea export-dropdown blackpurl-column" ng-class = "{'showingOverlay' : M_VOCF.showBlackpurlColumnDropDown[tableRowIndex]}" >
                                            <input  type="text" id="customise_data_section{{tableRowIndex}}_columnType" class="searchInput custom-input" 
                                            ng-focus="M_VOCF.showBlackpurlColumnDropDown[tableRowIndex] = true; F_VOCF.setCurrentInputValue(columnDetail.ColumnName)"
                                            ng-blur  = "M_VOCF.showBlackpurlColumnDropDown[tableRowIndex] = false; F_VOCF.updateVOCFlineItem($event, tableRowIndex)"
                                            ng-disabled="M_VOCF.isBtnSpinnerLoading"
                                            ng-model="columnDetail.ColumnName" placeholder="Please select" readonly="readonly" autocomplete="off"/> 
                                            <i id="customise_data_section{{tableRowIndex}}_columnTypeArrowIcon" class="bp-icons bp-font-14 bp-blue-font bp-cursor-pointer stroke-5 downArrow dfDownArrow" ng-click="F_VOCF.setFocusOnInput('customise_data_section_columnType', tableRowIndex)">arrowDown</i>
                                            <div class="searchResultOverlay" id="BlackpurlColumnTypeDropDownDiv">
                                            <ul>
                                                <li ng-repeat="columnType in M_VOCF.BlackpurlColumnTypeMap track by $index"
                                                    ng-mousedown="columnDetail.ColumnName = columnType; F_VOCF.removeSelectedValueFromDropdown(columnType, tableRowIndex);M_VOCF.showBlackpurlColumnDropDown[tableRowIndex] = false;"
                                                    id="columnType{{$index}}">
                                                    <div class="fullName text-capitalize">{{columnType}}</div>
                                                </li>  
                                                </ul> 
                                            </div>  
                                        </div>
                                    </td>
                                    <td ng-if="!columnDetail.isDelete" class="customise-data-body" id="customise_data_section{{tableRowIndex}}">
                                        <div ng-if="(!M_VOCF.editRow[tableRowIndex])">
                                            <span class = "column-name" ng-if = "columnDetail.ColumnLabel">{{columnDetail.ColumnLabel}}</span>
                                            <span class = "bp-editmode-text" ng-if = "!columnDetail.ColumnLabel">- - - - - - - - - - - - -</span>
                                        </div>
                                                        
                                        <div class="liItemDesc" ng-if="(M_VOCF.editRow[tableRowIndex])">
                                            <span class="editableDescInput" ng-class="{'focusInput': setBotrderOnSpan}">
                                                <input class = "bp-input-text input-width-heignt"
                                                    id="customise_data_section{{tableRowIndex}}_ColumnLabel"
                                                    ng-focus="setBotrderOnSpan = true;"
                                                    ng-blur="setBotrderOnSpan = false; F_VOCF.updateVOCFlineItem($event, tableRowIndex)"
                                                    ng-disabled="M_VOCF.isBtnSpinnerLoading"
                                                    type="text" ng-model = "columnDetail.ColumnLabel"
                                                    placeholder="Enter new column header name"
                                                />
                                            </span>
                                        </div>
                                    </td>
                                    <td ng-if="!columnDetail.isDelete" class="customise-data-body" id="customise_data_section{{tableRowIndex}}">
                                        <div ng-if="(columnDetail.ColumnName == 'Custom')">
                                            <div ng-if="(!M_VOCF.editRow[tableRowIndex])">
                                                <span class = "column-name" ng-if = "columnDetail.ColumnDefaultValue">{{columnDetail.ColumnDefaultValue}}</span>
                                                <span class = "bp-editmode-text" ng-if = "!columnDetail.ColumnDefaultValue">- - - - - - - - - - - - -</span>
                                            </div>
                                                            
                                            <div class="liItemDesc" ng-if="(M_VOCF.editRow[tableRowIndex])">
                                                <span class="editableDescInput" ng-class="{'focusInput': setBotrderOnSpan}">
                                                    <input class = "bp-input-text input-width-heignt"
                                                        id="customise_data_section{{tableRowIndex}}_ColumnDefaultValue"
                                                        ng-focus="setBotrderOnSpan = true;"
                                                        ng-blur="setBotrderOnSpan = false; F_VOCF.updateVOCFlineItem($event, tableRowIndex); F_VOCF.validateFormatField(columnDetail.ColumnDefaultValue);"
                                                        ng-class="{'c-red-border': M_VOCF.isError[columnDetail.ColumnDefaultValue]}"
                                                        ng-disabled="M_VOCF.isBtnSpinnerLoading"
                                                        type="text" ng-model = "columnDetail.ColumnDefaultValue"
                                                        placeholder="Enter value"
                                                    />
                                                </span>
                                            </div>
                                        </div>
                                    </td>
                                    <td ng-if="!columnDetail.isDelete" class="customise-data-body">
                                        <bp-ng-button name="" tool-tip-title="Edit" font-name="edit" font-class="bp-font-18 bp-dark-grey1-font" class-value="c-icon-btn" action="F_VOCF.editRow(tableRowIndex)" disabled-value="M_VOCF.isBtnSpinnerLoading" is-image-include="true" />
                                        <bp-ng-button name=""  tool-tip-title="Delete" font-name="delete" font-class="bp-font-18 bp-dark-grey1-font" class-value="c-icon-btn" action="F_VOCF.deleteRow($index)" disabled-value="columnDetail.ColumnName == 'Part number' || columnDetail.ColumnName == 'Needed qty' || M_VOCF.isBtnSpinnerLoading" is-image-include="true" />
                                    </td>
                                </tr>
                                <tr class="dndPlaceholder">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="add-new-column">
                        <bp-ng-button name="Add new column" class-value="c-action-btn c-btn" disabled-value="M_VOCF.isBtnSpinnerLoading || F_VOCF.isDisableAddNewColumnButton()"
                        action="F_VOCF.addNewColumn()" font-name = "addSquare" font-class="bp-font-16 bp-blue-dark-font"></bp-ng-button>
                    </div>
                </div>

                <div class = "c-modal-window-footer">
                    <span class = "c-primary-btn-container">
                        <div ng-if="!M_VOCF.isBtnSpinnerLoading">
                            <bp-ng-button name="Save export format" class-value="c-ternary-btn c-btn-modal" action="F_VOCF.saveCustomVOExport()" disabled-value="F_VOCF.isRequiredFieldsEmpty()" ></bp-ng-button>
                            <p ng-if="F_VOCF.isRequiredFieldsEmpty()" class="pull-left saveMsgPlacement redHover">{{ M_VOCF.SaveBtnDisablementMessage }}</p>                        
                        </div>
                        <div ng-if="M_VOCF.isBtnSpinnerLoading">
                            <bp-ng-button name="" class-value="c-ternary-btn c-btn-modal btn-spinner-loading" disabled-value=""></bp-ng-button>
                            <i class="c-input-white-loading-icon">
                                <svg class="input-white-spiner" width="85px" height="85px" viewBox="0 0 66 66" xmlns="https://www.w3.org/2000/svg">
                                    <circle class="input-white-spiner-path" fill="none" stroke-width="10" stroke-linecap="round" cx="33" cy="33" r="30"></circle> 
                                </svg>
                            </i>
                        </div>
                    </span>
                </div>


            </div>
       </div>
    </full-page-modal>

</apex:component>