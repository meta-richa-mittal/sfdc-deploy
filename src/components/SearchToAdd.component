<apex:component Controller="CustomerOrderCtrl" >

<script>
    var searchToAddModule = angular.module('searchToAddModule', []);

    searchToAddModule.factory('searchservice', function ($q) {
        return {
            searchText : function (textToSearch) {
                textToSearch = encodeString(textToSearch);
                var deferred = $q.defer();
                
                // make AJAX request to the remote service
                Visualforce.remoting.Manager.invokeAction( '{!$RemoteAction.CustomerOrderCtrl.getSearchResultsUpdated}' ,textToSearch, 
                function (result, event) {
                    if (event.type == 'exception') {
                        //showPopupNotification(event.message, "error");
                        deferred.reject(event.message);
                    } else {
                        var responseData = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
    
                        responseData = responseData.replace(re, '');
                        deferred.resolve(JSON.parse(responseData));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
        }
    });
    
    searchToAddModule.controller('searchtoadd', function ($scope, $parse, $sce, $timeout, $state, $stateParams, $q, searchservice) {
    
        $scope.titleField = 'Name';
        $scope.lastSearchTerm = null;
        $scope.currentIndex = null;
        $scope.justChanged = false;
        $scope.searchTimer = null;
        $scope.hideTimer = null;
        $scope.searching = false;
        $scope.pause = 500;
        $scope.minLength = 3;
        $scope.searchStr = null;
        $scope.UserDetails = null;
        var xhrCount = 0;
    
        if ($scope.userPause) {
            $scope.pause = $scope.userPause;
        }
    
        $scope.isNewSearchNeeded = function (newTerm, oldTerm) {
            return newTerm.length >= $scope.minLength && newTerm != oldTerm
        }
    
    	  $scope.$on('EmptySearchDropDown', function(event, args) {
				$scope.searchStr = '';
				$scope.showDropdown = false;
        });
        $scope.GetIntialdata = function () {
            if (!$scope.searchStr) {
                $scope.searchStr = null;
            }
            $scope.results = [];
            /* Start: Added by richa */
            //$scope.searchDivActive = true;
            if($scope.VendorOrderModel == undefined || $scope.VendorOrderModel == null || $scope.VendorOrderModel == "") {
                $scope.VendorOrderModel = {};
                
            }
            $scope.VendorOrderModel.searchDivActive = true;
            
            if($scope.VORModel == undefined || $scope.VORModel == null || $scope.VORModel == "") {
                $scope.VORModel = {};
                
            }
            $scope.VORModel.searchDivActive = true;
            /* End: Added by richa */
        }
    
        $scope.processResults = function (responseData, str) {
            if (responseData && responseData.length > 0) {
                /* Start: Ticket#148: Commented and Added by pooja 21-09-2016 */
                //$scope.results = [];
                var resultsArray = [];
                /* End: Ticket#148: Commented and Added by pooja 21-09-2016 */
                var counter = ((responseData.length) > 10 ? 10 : responseData.length);
                var titleFields = [];
                var compareval = 0;
    
                for (var i = 0; i < counter; i++) {
                    // Get title variables
                    var text = '';
    
                    text = responseData[i][$scope.titleField];
                    if(responseData[i].Description != null){
                        text += ' - '+responseData[i].Description; 
                    }
                    var resultRow = {
                        title : $sce.trustAsHtml(text),
                        originalObject : responseData[i],
                        info:responseData[i].Info
                    }
                    /* Start: Ticket#148: Commented and Added by pooja 21-09-2016 */
                    //$scope.results[$scope.results.length] = resultRow;
                    resultsArray[resultsArray.length] = resultRow;
                    /* End: Ticket#148: Commented and Added by pooja 21-09-2016 */
                    
                }
                
                if (responseData.length > 10) {
                    var AddationalRow = {
                        title : $sce.trustAsHtml(("...and " + (responseData.length - counter).toString() + " other results")),
                        originalObject : " ",
                    }
                    /* Start: Ticket#148: Commented and Added by pooja 28-09-2016 */
                    //$scope.results.push(AddationalRow);
                    resultsArray.push(AddationalRow);
                    /* End: Ticket#148: Commented and Added by pooja 28-09-2016 */
                }
                
                /* Start: Commented by richa for ticket #153 */
                /* if (compareval == 0 && $scope.searchStr) {
                    var AddationalRow = {
                        title : $sce.trustAsHtml(("No other results")),
                        originalObject : " ",
                    }
                    // Start: Ticket#148: Commented and Added by pooja 21-09-2016 
                    //$scope.results.push(AddationalRow);
                    resultsArray.push(AddationalRow);
                    // End: Ticket#148: Commented and Added by pooja 21-09-2016
                } */
                /* Start: Commented by richa for ticket #153 */
    
                /* Start: Ticket#148: Commented and Added by pooja 21-09-2016 */
                //$scope.results.push({
                //resultsArray.push({    /* Ticket#1893: Commented By Pooja 13 Apr. 2017 */
                /* End: Ticket#148: Commented and Added by pooja 21-09-2016 */
                
                /* Start: Ticket#1893: Commented By Pooja 13 Apr. 2017 */
                    /* title : $sce.trustAsHtml("ADVANCED SEARCH"),
                    originalObject : " ",
                }); */
                /* End: Ticket#1893: Commented By Pooja 13 Apr. 2017 */

                /* $scope.results.push({
                    title : $sce.trustAsHtml("+ Add New Customer"),
                    originalObject : " ",
                }); */
                
                //Ticket#148: Added by pooja 21-09-2016 
                $scope.results = resultsArray;
                
            } else {
                $scope.results = [];
            }
            xhrCount = 0;
        }
    
        $scope.searchTimerComplete = function (str) {
            if (str != null) {
                if (str.length >= $scope.minLength) {
                    $scope.SearchSuggestion(str);
                }
            } else {
                $scope.SearchSuggestion("");
            }
        }
    
        $scope.SearchSuggestion = function (str) {
            var seqNumber = ++xhrCount;
            var filterParam = [];
            debug("current state name");
            debug($state.current.name);
            var currentPage = $state.current.name; 
            if(currentPage.toLowerCase().indexOf("ViewCustomer".toLowerCase()) > -1) {
                $scope.SearchableObjects = "Customer";
                var customerFilter = {"Field" : "Is_Customer__c",
                                    "Value" : true, 
                                    "FilterObject" : "Account",
                                    "Operator"     : "="
                                   };
                filterParam.push(customerFilter);
            }
            
            if($scope.$parent.VendorOrderModel != undefined && currentPage.toLowerCase().indexOf("VendorOrderInvoicing".toLowerCase()) == -1){
            	var vendorFilter = {"Field" : "Vendor__c",
                                    "Value" : ($scope.$parent.VendorOrderModel.VendorOrderHeader == undefined) || 
                                                ($scope.$parent.VendorOrderModel.VendorOrderHeader.VendorId == undefined) ? "''" : 
                                                    "'" + $scope.$parent.VendorOrderModel.VendorOrderHeader.VendorId + "'", 
                                    "FilterObject" : "Part__c",
                                    "Operator"     : "="
                                   };
                                   
            	var nonInventoryFilter = {"Field"  : "Non_Inventory_Part__c",
                                          "Value"  : false, 
                                          "FilterObject" :"Part__c",
                                          "Operator"     : "="
                                        };
            	
            	if(!$scope.$parent.VendorOrderModel.isSearchNeededFromAnotherVendor) {
                   filterParam.push(vendorFilter);
                }
            	filterParam.push(nonInventoryFilter);
                if($scope.SearchableObjects.includes('Vendor')) {
                    filterParam.push({
                            'Field': 'Is_Vendor__c',
                            'Value': true,
                            'Operator': '=',
                            'FilterObject': 'Account'
                        });
                }
            }
             if($scope.$parent.RVO != undefined && currentPage.toLowerCase().indexOf("VendorOrderInvoicing".toLowerCase()) == -1){
            	var vendorFilter = {"Field" : "Vendor__c",
                                    "Value" : ($scope.$parent.RVO.Data == undefined) || 
                                                ($scope.$parent.RVO.Data.VendorId == undefined) ? "''" : 
                                                    "'" + $scope.$parent.RVO.Data.VendorId + "'", 
                                    "FilterObject" : "Part__c",
                                    "Operator"     : "="
                                   };
                                   
            	var nonInventoryFilter = {"Field"  : "Non_Inventory_Part__c",
                                          "Value"  : false, 
                                          "FilterObject" :"Part__c",
                                          "Operator"     : "="
                                        };
            	
            	if(!$scope.$parent.RVO.isSearchNeededFromAnotherVendor) {
                   filterParam.push(vendorFilter);
                }
            	filterParam.push(nonInventoryFilter);
            }
            
            if($scope.PreferredObject == 'Fee' && (currentPage.toLowerCase().indexOf("VendorOrderInvoicing".toLowerCase()) > -1 || 
                currentPage.toLowerCase().indexOf("ReturnVendorCredit".toLowerCase()) > -1)) {
            	filterParam = [
            					{	"Field"			: "Active__c",
                                 	"Value"			: true, 
                                 	"FilterObject" 	: "Fee__c",
                                    "Operator"      : "="
                                },
                                {	"Field"			: "Type__c",
                                    "Value"			: "'Purchasing'", 
                                    "FilterObject" 	: "Fee__c",
                                    "Operator"      : "="
                                }
                             ];
            }
            
            var searchQueryJson = {
                "ObjectLabel" : ($scope.typeToSearch == undefined) ? "Customer" : $scope.typeToSearch,
                "SearchText" : str,
                "PreferredObject" : ($scope.PreferredObject == undefined) ? "Customer" : $scope.PreferredObject,
                "SearchableObjects" : ($scope.SearchableObjects == undefined) ? "Vendor" : $scope.SearchableObjects,
               "FilterValues":(filterParam == undefined || filterParam == '') ? [] : filterParam  
            };    
            var responseData = "";
             debug(searchQueryJson );
              searchQueryJson = JSON.stringify(searchQueryJson);
            searchservice.searchText(searchQueryJson).then( function(successfulSearchResult) {
                responseData = successfulSearchResult;
                $scope.searching = false;
                if (seqNumber === xhrCount) {
                    $scope.processResults((($scope.dataField) ? responseData[$scope.dataField] : responseData));
                 }
            },
            function (errorSearchResult) {
                responseData = errorSearchResult;
                $scope.searching = false;
        }
	       	);
        }
    
    
        $scope.hideResults = function () {
            /* Start: Added by richa */
            if($scope.VendorOrderModel == undefined || $scope.VendorOrderModel == null || $scope.VendorOrderModel == "") {
                $scope.VendorOrderModel = {};
                
            } 
            $scope.VendorOrderModel.searchDivActive = false;
            
            if($scope.VORModel == undefined || $scope.VORModel == null || $scope.VORModel == "") {
                $scope.VORModel = {};
                
            }
            $scope.VORModel.searchDivActive = false;
            //$scope.searchDivActive = false;
            /* End: Added by richa */
        }
        $scope.resetHideResults = function () {}
        $scope.hoverRow = function (index) {}
    
        $scope.keyPressed = function (event) {
            if (!(event.which == 38 || event.which == 40 || event.which == 13)) {
                if (!$scope.searchStr || $scope.searchStr == "") {
                    $scope.showDropdown = false;
                    $scope.lastSearchTerm = null
                } else if ($scope.isNewSearchNeeded($scope.searchStr, $scope.lastSearchTerm)) {
                    $scope.lastSearchTerm = $scope.searchStr;
                    $scope.showDropdown = true;
                    $scope.currentIndex = -1;
                    //Ticket#148: Commented by pooja 19-09-2016
                    //$scope.results = [];
        
                    if ($scope.searchTimer) {
                        $timeout.cancel($scope.searchTimer);
                    }
    
                    $scope.searching = true;
    
                    $scope.searchTimer = $timeout(function () {
                            $scope.searchTimerComplete($scope.searchStr);
                        }, $scope.pause);
    
                    /*$scope.delay = function(){
                    var timer = 0;
                    return function(callback, ms){
                    clearTimeout (timer);
                    timer = setTimeout(callback, ms);
                    };
    
                    }*/
                }
            }else if(event.which == 13) { // else if added by richa for selecting first result on pressing enter without selecting any result
                
                var infoString = 'object';
                var isDataAvailable = false;
                if ($scope.results && $scope.results.length > 0 && !($scope.currentIndex >= 0 && $scope.currentIndex < $scope.results.length)) {
                    if($scope.results.length > 0) { 
                        for (var i = 0; i < $scope.results.length; i++) { // subtracted 1 for advance search  /* Ticket#1893: for (var i = 0; i < $scope.results.length - 1; i++) -> for (var i = 0; i < $scope.results.length; i++): Changed By Pooja 13 Apr. 2017 */
                            if($scope.results[i].info.toUpperCase() === infoString.toUpperCase()) {
                                continue;
                                
                            } else {
                                isDataAvailable = true;
                                $scope.selectResult($scope.results[i]);
                                break;
                            }
                        }
                        if(isDataAvailable == false) {
                            $scope.selectResult($scope.results[0]);
                        }
                    }
                    $scope.$apply();
                    event.preventDefault;
                    event.stopPropagation();
    
                }
                
                
            }else {
                event.preventDefault();
            }
        }
    
        $scope.selectResult = function (result) {
            $scope.showDropdown = false;
            $scope.results = [];
            $scope.searchStr = "";
            
            if($scope.$parent.VendorOrderModel && $scope.$parent.VendorOrderModel.isSearchNeededFromAnotherVendor) {
                $scope.$parent.VendorOrderModel.isSearchNeededFromAnotherVendor = false;
            } 
             if($scope.$parent.RVO && $scope.$parent.RVO.isSearchNeededFromAnotherVendor) {
                $scope.$parent.RVO.isSearchNeededFromAnotherVendor = false;
            }
            if($scope.$parent.VendorOrderModel != undefined){
	            if(result.info == 'Vendor' && $scope.$parent.VendorOrderModel.vendorOrderLineItemGroupList != undefined && $scope.$parent.VendorOrderModel.vendorOrderLineItemGroupList.length > 0){
	            	Notification.error('Please Remove Line Item First');
	            	return;
	            }
            }
            
            if($scope.SearchToAddCallback == undefined){
               $scope.$parent.ViewCustomer.selectCallBack(result);
            } else {
                 $scope.SearchToAddCallback(result);
            }
        }
        
        var inputField = angular.element('#SearchToaddCutomer');
        inputField.on('keyup', $scope.keyPressed);
    
        angular.element('#SearchToAddElement').on("keyup", function (event) {
            if (event.which === 40) {
                if ($scope.results && ($scope.currentIndex + 1) < $scope.results.length) {
                    $scope.currentIndex++;
                    $scope.$apply();
    
                    var inputFieldEle = angular.element('.angucomplete-row');
                    inputFieldEle.removeClass('angucomplete-selected-rowHover');
    
                    event.preventDefault;
                    event.stopPropagation();
                }
                $scope.$apply();
            } else if (event.which == 38) {
                if ($scope.currentIndex >= 1) {
                    $scope.currentIndex--;
                    var inputtextField = angular.element('#SearchToaddCutomer');
                    
                    $scope.$apply();
                    event.preventDefault;
                    event.stopPropagation();
                }
            } else if (event.which == 13) {
                if ($scope.results && $scope.currentIndex >= 0 && $scope.currentIndex < $scope.results.length) {
                    $scope.selectResult($scope.results[$scope.currentIndex]);
                    //$scope.SaveMerchandiseSearchSource();
    
                    $scope.$apply();
                    event.preventDefault;
                    event.stopPropagation();
                } else {
                    $scope.showDropdown = true;
                    event.preventDefault;
                    event.stopPropagation();
                }
            } else if (event.which == 27) {
                $scope.results = [];
                $scope.showDropdown = false;
                $scope.$apply();
            } else if (event.which == 8) {
                if (($scope.lastSearchTerm == null || $scope.lastSearchTerm == "") && ($scope.testScopeVar == "0")) {
                    $scope.testScopeVar = 1;
                } else if (($scope.lastSearchTerm == null || $scope.lastSearchTerm == "") && ($scope.testScopeVar == "1")) {
                    $scope.testScopeVar = 0;
                }
                //$scope.selectedObject = null;
                $scope.$apply();
            }
        });
    });
</script>
</apex:component>