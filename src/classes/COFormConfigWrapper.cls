/**
 * Author: Nidhi Sharma
 * Since: Oct 29, 2020
 * Name: COFormConfigWrapper
 * Description: Used to provide form mapping values
**/
public class COFormConfigWrapper {
	
	public String CustomerOrderNumber;
    public String CODate;
	
    //Customer
    public String CustomerFirstName;
    public String CustomerLastName;
    public String CustomerName;
    public String CustomerStreetAddress1;
    public String CustomerStreetAddress2;
    public String CustomerStreetAddress1and2;
    public String CustomerCity;
    public String CustomerState;
    public String CustomerZIPCode;
    public String CustomerBillingCityStateZipCode;
    public String CustomerPhoneNumber;
    public String CustomerOtherPhone;
    public String CustomerEmail;
    public String CustomerDriverLicenseNumber;
    public String CustomerDOB;
    public String CustomerAddress;
    public String CustomerShippingStreetAddress1;
    public String CustomerShippingStreetAddress2;
    public String CustomerShippingStreetAddress1and2;
    public String CustomerShippingCity;
    public String CustomerShippingState;
    public String CustomerShippingZIPCode;
    public String CustomerShippingCountry;
    public String CustomerBillingCityState;
    public String CustomershippingCityStateZipCode;
    public String CustomerShippingAddress;	
    
    //Business
    public String BusinessPhoneNumber;
    public String BusinessEmail;
    public String BusinessName;
    public String BusinessCity;
    public String BusinessState;
    public String BusinessZipcode;
    public String BusinessAddressLine1;
    public String BusinessAddressLine2;
    public String BusinessAddress1and2;
    public String BusinessAddress;
    public String BusinessCityStateZipCode;
    public String BusinessCityState;
    public String BusinessTaxId;
    
    //Deal
    public String DealInvoicedDate;
    public String DateInvoicedDay;
    public String DateInvoicedMonth;
    public String DateInvoicedMonthName;
    public String DateInvoicedYear;
    public String DealDeliveryDate;
    public String DealTotalAmountPaid;
    public String DealTotalBalanceDue;
    public String DealInvoiceNumber;
    public String DealTotal;
    public String DealAmountFinanced;
    public String DateToday;
    public String DateTodayCopy1;
    public String DateTodayCopy2;
    public String DealSalesperson;
    public String DealTotalSalesTaxes;
    public String DealTotalUnitAmount;
    public String DealTotalDuePayble;
    public String NetPurchasePrice;
    public String DealSalespersonFirstName;
    public String DealSalespersonLastName;

    //Deal Finance
    public String FinanceCompany;
    public String FinanceCompanyBillingAddress1;
    public String FinanceCompanyBillingAddress2;
    public String FinanceCompanyBillingAddress1and2;
    public String FinanceCompanyBillingCity;
    public String FinanceCompanyBillingState;
    public String FinanceCompanyBillingZipCode;
    public String DealFinanceEstimatedPayment;
    public String DealFinanceLoanPayments;
    public String DealFinanceDownPayment;
    public String DealFinanceInterestRate;
    public String DealFinanceLoanTerm;
    public String DealFinanceDealTotal;
    public String DealFinancePaymentFrequency;
    public String FinanceCompanyBillingAddressCityStateZipCode;
    public String ProductDealFinanceEstimatedPaymentAndLoanTerm;
    public String DiffOfProdDealFinanceEstimatedPaymentAndLoanTermAndDealAmountFinanced;
    public String SumOfProdDealFinanceEstimatedPaymentAndLoanTermAndDealFinanceDownPayment;
  
    //Co Buyer
    public String CoBuyerName;
    public String CoBuyerLicenseNumber;
    public String CoBuyerFirstName;
    public String CoBuyerLastName;
    public String CoBuyerAddress;
    public String CoBuyerAddress1;
    public String CoBuyerAddress2;
    public String CoBuyerStreetAddress1and2;
    public String CoBuyerCity;
    public String CoBuyerState;
    public String CoBuyerZIPCode;
    public String CoBuyerBillingCityState;
    public String CoBuyerBillingCityStateZIPCode;
    
    //Deal Unit
    public String TotalStampduty;
    public String UnitTotalBasePrice;
    public String UnitTotalFactoryOptions;
    public String UnitTotalDealerInstalledOptions;
    public String UnitTotalPriceWithNonFeeOptions;
    public String UnitTotalSalesTax;
    public String UnitTotalPrice;
    public String UnitTotalPriceWithPartLabour;
    public String UnitTotalOptionsParts;
    public String UnitTotalOptionsLabor;
    public String UnitAllOptionLaborCodeName;
    public String UnitTotalOptionsPartsAndLabor;
    public String UnitTotalOptionsPartsLaborAndSublet;
    public String UnitTotalOptionsAndFees;
    public String UnitTotalPriceLaborRegInsTagFee;
	public String DealTotalFee;
    public String DealTotalOptionsParts;
	public String DealTotalOptionsLabor;
    public String UnitInvoiceDate;
    public String DealTotalPartsAndLaborAmount;
	public String DealTotalPartLaborAndFee;
	public String DealPartAndFee;
    public String UnitTotalPriceWithAllOptions;
    public String DifferenceOfTradeInTotalAndUnitTotal;
    public String UnitTotalOptionsPartsAndSublet;  
    public String WarrantyAndNoTagFeeUnitTotal;
    public String DealRideAwayPrice;
    public String DifferenceOfUnitTotalPriceWithAllOptionsAndTradeInTotal ;
    public String DifferenceOfUnitTotalPriceWithNonFeeOptionsAndTradeInTotal;
    public String DifferenceOfTotalUnitPriceCodeAndNoTagFeeAndTradeInTotal;
    public String SumOfBasePriceSalesTaxAndDOCFee;
    public String SumOfBasePricePartsPriceAndFRTOUTFee;
    public String SumOfBasePricePartsPriceFRTOUTFeeAndDOCFee;
    public String SumOfUnitTotalPriceAndSalesTax;
    public String SumOfTradeInTotalAndDealTotalAmountPaid;
    public String DiffOfUnitTotalPriceWithSalesTaxAndTradeInTotalWithDealTotalAmountPaid;
    public String AmountFinancedTrakPowersports;
    public String DifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal;
    public String TotalSalesTaxAndDifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal;
    public String DifferOfUnitTotalBasePriceAndDISCCodeUnitFee;
    public String DifferenceOfNetPurchasePriceAndRebateFee;
    public String SumOfRegtTitleTranFeeAndSalesTax;

    public String DealPartAndFeeFarnleysYamaha;
    public String TotalDeliverPriceOfVehicle;

	public String UnitTotalPriceAnd5OptionsPartFee;
    public String TotalUnitPriceFeeOfCodeAndNoTagFee;
	public String TotalSalesTaxAndDifferenceOfUnitPriceWithCodeAndNoTagFeeAndTradeInTotal;
    public String TotalUnitPriceOfCodeAndNoTagPart;
    public String SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceAndDOCTagUnitFee;
    public String SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceDOCTagUnitFeeLICTagUnitFeeAndTotalSalesTax;
    
	public String DealPartAndFeeName1;
	public String DealPartAndFeePrice1;
	public String DealPartAndFeeName2;
	public String DealPartAndFeePrice2;
	public String DealPartAndFeeName3;
	public String DealPartAndFeePrice3;
	public String DealPartAndFeeName4;
	public String DealPartAndFeePrice4;
	public String DealPartAndFeeName5;
	public String DealPartAndFeePrice5;
    public String DealPartDescriptionList;
    public String DealPartPriceList;
    public String TotalDealPartPrice;

    //Unit
    public String UnitMake;
    public String UnitModel;
    public String UnitSubModel;
    public String UnitYear;
    public String UnitStockNumber;
    public String UnitExteriorColour;
    public String UnitDateStockedin;
    public String UnitInteriorColour;
    public String UnitComplianceDate;
    public String UnitNotes;
    public String UnitNotesGleeson;
    public String UnitCylinders;
    public String UnitDisplacement;
    
    public String UnitOdometer;
    public String UnitOdometer1;
    public String UnitOdometer2;
    public String UnitOdometer3;
    public String UnitOdometer4;
    public String UnitOdometer5;
    public String UnitOdometer6;
    
    public String UnitVIN;
    public String UnitVIN01;
    public String UnitVIN02;
    public String UnitVIN03;
    public String UnitVIN04;
    public String UnitVIN05;
    public String UnitVIN06;
    public String UnitVIN07;
    public String UnitVIN08;
    public String UnitVIN09;
    public String UnitVIN10;
    public String UnitVIN11;
    public String UnitVIN12;
    public String UnitVIN13;
    public String UnitVIN14;
    public String UnitVIN15;
    public String UnitVIN16;
    public String UnitVIN17;
    public String UnitVIN18;
    public String UnitVIN19;
    
    public String CustomerDOBMonth01;
    public String CustomerDOBMonth02;
    public String CustomerDOBDay01;
    public String CustomerDOBDay02;
    public String CustomerDOBYear01;
    public String CustomerDOBYear02;
    public String CustomerDOBYear03;
    public String CustomerDOBYear04;
    public String UnitRegistrationExpiryMonth01;
    public String UnitRegistrationExpiryMonth02;
    public String UnitRegistrationExpiryDay01;
    public String UnitRegistrationExpiryDay02;
    public String UnitRegistrationExpiryYear01;
    public String UnitRegistrationExpiryYear02;
    public String UnitRegistrationExpiryYear03;
    public String UnitRegistrationExpiryYear04;
    public String UnitComplianceDateMonth01;
    public String UnitComplianceDateMonth02;
    public String UnitComplianceDateYear01;
    public String UnitComplianceDateYear02;
    public String UnitComplianceDateYear03;
    public String UnitComplianceDateYear04;

    public String UnitOtherData01;
    public String UnitOtherData02;
    public String UnitOtherData03;
    public String UnitOtherData04;
    public String UnitOtherData05;
    public String UnitOtherData06;
    public String UnitOtherData07;
    public String UnitOtherData08;
    public String UnitOtherData11;
    public String UnitOtherData09;
    public String UnitOtherData10;
    public String UnitOtherData12;
    public String UnitOtherData13;
    public String UnitOtherData14;
    
	public String SecondUnitMake;
	public String SecondUnitModel;
	public String SecondUnitYear;
	public String SecondUnitExteriorColour;
	public String SecondUnitOtherData01;
	public String SecondUnitVIN;
	public String SecondUnitRegistrationNumber;
	public String SecondUnitEngineNumber;
    
    //Trade In
    public String TradeInUnitMake;
    public String TradeInUnitModel;
    public String TradeInUnitSubModel;
    public String TradeInUnitYear;
    public String TradeInUnitExteriorColour;
    public String TradeInUnitDescription;
    public String TradeInUnitEngineSize;
    public String TradeInUnitYearFirstREGO;
    public String TradeInUnitOtherNumber;
	public String TradeInUnitOtherData01;
    public String TradeInUnitRegistriationNumber;
    public String TradeInUnitRegistrationExpirydate;
    public String TradeInUnitEngineNumber;
	public String TradeInUnitStockNumber;
    
    public String TradeInTotal;
    public String TradeInUnitLienPayout;
    public String TradeInUnitNetAllowance;
    public String TaxableAmount;
    public String TaxableAmountAfterTax;
    public String DealTotalTradeInsAmount;

    public String TradeInSalesTaxesAmount;
	
	//Lien Payout    
    public String LienFinanceCompanyName;
    public String LienFinanceCompanyAddress1;
    public String LienFinanceCompanyAddress2;
    public String LienFinanceCompanyAddress1and2;
    public String LienFinanceCompanyCity;
    public String LienFinanceCompanyState;
    public String LienFinanceCompanyZipCode;
    public String LienFinanceCompanyCityStateZipCode;
    public String DealTotalLienPayoutAmount;
    
    
    public String TradeInUnitOdometer;
    public String TradeInUnitOdometer1;
    public String TradeInUnitOdometer2;
    public String TradeInUnitOdometer3;
    public String TradeInUnitOdometer4;
    public String TradeInUnitOdometer5;
    public String TradeInUnitOdometer6;
    
    public String TradeInUnitVIN;
    public String TradeInUnitVIN01;
    public String TradeInUnitVIN02;
    public String TradeInUnitVIN03;
    public String TradeInUnitVIN04;
    public String TradeInUnitVIN05;
    public String TradeInUnitVIN06;
    public String TradeInUnitVIN07;
    public String TradeInUnitVIN08;
    public String TradeInUnitVIN09;
    public String TradeInUnitVIN10;
    public String TradeInUnitVIN11;
    public String TradeInUnitVIN12;
    public String TradeInUnitVIN13;
    public String TradeInUnitVIN14;
    public String TradeInUnitVIN15;
    public String TradeInUnitVIN16;
    public String TradeInUnitVIN17;
    public String TradeInUnitVIN18;
    public String TradeInUnitVIN19;
    
	//Tagged Fee
	public String UnitFee1NoTagName; 
	public String UnitFee1NoTagPrice;
	public String UnitFee2NoTagName; 
	public String UnitFee2NoTagPrice;
	public String UnitFee3NoTagName; 
	public String UnitFee3NoTagPrice;
	public String UnitFee4NoTagName; 
	public String UnitFee4NoTagPrice;
	public String UnitFee5NoTagName; 
	public String UnitFee5NoTagPrice;
	public String UnitFee6NoTagName; 
	public String UnitFee6NoTagPrice;
	
	public String UnitFeeGasTagUnitFee; 
	public String UnitFeeLicTagUnitFee;
	public String UnitFeeWARRUnitFee;	//UnitFeeWarrantyProduct
    public String UnitFeeDOCTagUnitFee;
	public String UnitFeeREGTagUnitFee;
	public String UnitFeeINSTagUnitFee;
    public String UnitMakeModel;
    public String UnitRegistrationExpirydate;
    public String UnitYearFirstREGO;
    public String UnitRegistrationNumber;
    public String UnitEngineSize;
    public String UnitTotalPricePlusOptionsTax;
    public String UnitDescription;
    public String UnitOtherNumber;
    public String UnitEngineNumber;
    public String UnitOptionListing;
    public String ADMINTagUnitFee;
    public String UnitFeeTITLETagUnitFee;
	public String DOCCodeUnitFee;
	public String TEFCodeUnitFee;
	public String WARRCodeUnitFee;
	public String FRTCodeUnitFee;
	public String PDICodeUnitFee;
  	public String StateCodeUnitFee;
    public String FRTOUTCodeUnitFee;
    public String GAPCodeUnitFee;
    public String Title_FeeCodeUnitFee;
    public String ESCCodeUnitFee;
    public String NintyDay_WarrantyFeeCodeUnitFee;
    public String Prepaid_MaintenanceFeeCodeUnitFee;
    public String RegistrationFeeCodeUnitFee;
    public String PlateTransferFeeCodeUnitFee;
    public String VINInspectionFeeCodeUnitFee;
    public String VINTradeFeeCodeUnitFee;
    public String SumOfRegistrationPlateTransferVINInspectionAndVINTrade;
    public String SumOfFeesTrakPowersports;
    public String DOCCodeFeeName;
    public String ESCCodeFeeName;
    public String NintyDayWarrantyCodeFeeName;
    public String PrepaidMaintenanceCodeFeeName;
    public String DISCCodeUnitFee;
    public String GAPCodeUnitFeeDescription;
    public String GAPVendorProductTerm;
    public String GAPDescriptionPrice;
    public String License1CodeUnitFee;
    public String SumOfTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeUnitFee;
    public String SumOfUnitTotalSalesTaxTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeFee;
    public String TotalPurchasePriceForFTruck;
    public String PayableDeliveryUnitFee;
    public String RebateCodeFeePrice;
    public String UnitFeeTRANTagUnitFee;

    //Tagged Part
    public String UnitPart1NoTagName;
    public String UnitPart2NoTagName;
    public String UnitPart3NoTagName;
    public String UnitPart4NoTagName;
    public String UnitPart5NoTagName;
    public String UnitPart6NoTagName;
    public String UnitPart7NoTagName;
    public String UnitPart8NoTagName;
    public String UnitPart9NoTagName;
    public String UnitPart10NoTagName;
    public String UnitPart11NoTagName;
    public String UnitPart12NoTagName;
    public String UnitPart13NoTagName;
    public String UnitPart14NoTagName;
    public String UnitPart15NoTagName;
    public String UnitPart16NoTagName;
    public String UnitPart17NoTagName;
    public String UnitPart18NoTagName;
    public String UnitPart19NoTagName;
    public String UnitPart20NoTagName;
    public String UnitPart1NoTagPrice;
    public String UnitPart2NoTagPrice;
    public String UnitPart3NoTagPrice;
    public String UnitPart4NoTagPrice;
    public String UnitPart5NoTagPrice;
    public String UnitPart6NoTagPrice;
    public String UnitPart7NoTagPrice;
    public String UnitPart8NoTagPrice;
    public String UnitPart9NoTagPrice;
    public String UnitPart10NoTagPrice;
    public String UnitPart11NoTagPrice;
    public String UnitPart12NoTagPrice;
    public String UnitPart13NoTagPrice;
    public String UnitPart14NoTagPrice;
    public String UnitPart15NoTagPrice;
    public String UnitPart16NoTagPrice;
    public String UnitPart17NoTagPrice;
    public String UnitPart18NoTagPrice;
    public String UnitPart19NoTagPrice;
    public String UnitPart20NoTagPrice;


    //Previous owner fields
    public String UnitPrevOwnerName;  
    public String UnitPrevOwnerStreetAddress1;
    public String UnitPrevOwnerStreetAddress2;
    public String UnitPrevOwnerStreetAddress1and2;
    public String UnitPrevOwnerCity;
    public String UnitPrevOwnerState;
    public String UnitPrevOwnerZIPCode;
    public String UnitPrevOwnerAddress;

    //Service Order fields
    public String ServiceConcern;
    public String ServiceCause;
    public String ServiceCorrection;
    public String ServiceNotesforCustomer;
    public String ServiceNotesforCustomerCamroseMotorsports;
    public String ServiceJobItems;
    public String QtyServiceJobItems;
    public String ServiceJobInvoice;
    public String ServiceJobUnitMake;
    public String ServiceJobUnitModel;
    public String ServiceJobUnitSubModel;
    public String ServiceJobUnitYear;
    public String ServiceJobUnitVIN;
    public String ServiceJobUnitOdometer;
    public String ServiceJobOdometerOnArrival;
    public String ServiceJobOdometerOnDeparture;
    public String ServiceConcernCamrose;
	public String ServiceCauseCamrose;
	public String ServiceCorrectionCamrose;
	
	//Others
    public String DealerGDN = 'P153991X';
    
	public void setCOFields(CO_Header__c coRec) {
		this.CustomerOrderNumber = coRec.Name;
        this.CODate = BPUtility.getFormatedDateTime(coRec.CreatedDate__c);
	}
	
    public void setBusinessFields(Business_Profile__c bpRec) {
    	this.BusinessPhoneNumber = bpRec.Formatted_Business_Number__c != null ? bpRec.Formatted_Business_Number__c : '' ;
        this.BusinessEmail = bpRec.Business_Email__c != null ? bpRec.Business_Email__c : '';
        this.BusinessName = bpRec.Business_Name__c != null ? bpRec.Business_Name__c : '';
        this.BusinessCity = bpRec.Business_City__c != null ? bpRec.Business_City__c : '';
        this.BusinessState = bpRec.Business_State__r.Name__c != null ? bpRec.Business_State__r.Name__c : '';
        this.BusinessAddressLine1 = String.isNotBlank(bpRec.Business_Street_Address1__c) ? bpRec.Business_Street_Address1__c : '';
        this.BusinessAddressLine2 = String.isNotBlank(bpRec.Business_Street_Address2__c) ? bpRec.Business_Street_Address2__c : '';
        this.BusinessAddress1and2 = this.BusinessAddressLine1 + ' ' + this.BusinessAddressLine2;
        this.BusinessZipcode = bpRec.Business_Postal_Code__c != null ? bpRec.Business_Postal_Code__c : '';
        this.BusinessAddress = this.BusinessAddress1and2 + ' ' + this.BusinessCity+ ' ' + this.BusinessState+ ' ' + this.BusinessZipcode;
        this.BusinessCityStateZipCode = this.BusinessCity+ ' ' + this.BusinessState+ ' ' + this.BusinessZipcode;
        this.BusinessCityState = this.BusinessCity+ ' ' + this.BusinessState;
        this.BusinessTaxId = Configurations__c.getOrgDefaults().Tax_Id__c;
    }
    
    public void setCustomerFields(Account customerRec) {
        this.CustomerName = String.isNotBlank(customerRec.Name) ? customerRec.Name : '';
        
        String billingStreet = (customerRec.BillingStreet == null ) ? '' : customerRec.BillingStreet;
        List<String> bsList = billingStreet.split('\n');
        this.CustomerStreetAddress1 = (bsList.size() > 0) ? bsList[0].replace('\n', ' ') : '';
        this.CustomerStreetAddress2 = (bsList.size() > 1) ? bsList[1].replace('\n', ' ') : '';
        this.CustomerStreetAddress1and2 = this.CustomerStreetAddress1 + ' ' + this.CustomerStreetAddress2;
        
        this.CustomerShippingCity = (customerRec.ShippingCity == null) ? '' : customerRec.ShippingCity;
        this.CustomerShippingState = (customerRec.ShippingState == null) ? '' : customerRec.ShippingState;
        this.CustomerShippingZIPCode = (customerRec.ShippingPostalCode == null) ? '' : customerRec.ShippingPostalCode;
        this.CustomerShippingCountry= (customerRec.ShippingCountry == null) ? '' : customerRec.ShippingCountry;
        
        this.CustomerCity = String.isNotBlank(customerRec.BillingCity) ? customerRec.BillingCity : '';
        this.CustomerState = String.isNotBlank(customerRec.BillingState) ? customerRec.BillingState : '';
        this.CustomerZIPCode = String.isNotBlank(customerRec.BillingPostalCode) ? customerRec.BillingPostalCode : '';
        this.CustomerBillingCityStateZipCode = this.CustomerCity + ' ' + this.CustomerState + ' ' + this.CustomerZIPCode;
        this.CustomerBillingCityState = this.CustomerCity + ' ' + this.CustomerState;
        
        String shippingStreet = (customerRec.ShippingStreet == null ) ? '' : customerRec.ShippingStreet;
        List<String> ssList = shippingStreet.split('\n');
        this.CustomerShippingStreetAddress1 = (ssList.size() > 0) ? ssList[0].replace('\n', ' ') : '';
        this.CustomerShippingStreetAddress2 = (ssList.size() > 1) ? ssList[1].replace('\n', ' ') : '';
        this.CustomerShippingStreetAddress1and2 = this.CustomerShippingStreetAddress1 + ' ' + this.CustomerShippingStreetAddress2;
        this.CustomerShippingCity = String.isNotBlank(customerRec.shippingCity) ? customerRec.shippingCity : '';
        this.CustomerShippingState = String.isNotBlank(customerRec.shippingState) ? customerRec.shippingState : '';
        this.CustomerShippingZIPCode = String.isNotBlank(customerRec.shippingPostalCode) ? customerRec.shippingPostalCode : '';
        this.CustomershippingCityStateZipCode = this.CustomerShippingCity + ' ' + this.CustomerShippingState + ' ' + this.CustomerShippingZIPCode;
        this.CustomerShippingAddress = this.CustomerShippingStreetAddress1and2 + ' ' + this.CustomershippingCityStateZipCode;
        this.CustomerShippingAddress = this.CustomerShippingAddress.replace('\r\n',' ');
        this.CustomerShippingAddress = this.CustomerShippingAddress.replace('\n',' ');
        this.CustomerShippingAddress = this.CustomerShippingAddress.replace('\r',' ');

        this.CustomerPhoneNumber = '';
        if(customerRec.Type__c == 'Individual') {
            this.CustomerFirstName = (customerRec.FirstName__c != null) ? customerRec.FirstName__c : '';
            this.CustomerLastName = (customerRec.LastName__c != null) ? customerRec.LastName__c : '';
            this.CustomerPhoneNumber = String.isNotBlank(customerRec.Formatted_Home_number__c) ? customerRec.Formatted_Home_number__c : '';
        } else if(customerRec.Type__c == 'Business')  {
            this.CustomerFirstName = '';
            this.CustomerLastName = (customerRec.Name != null)? customerRec.Name : '';
            this.CustomerPhoneNumber = String.isNotBlank(customerRec.Formatted_Work_Number__c) ? customerRec.Formatted_Work_Number__c : '';
        }
        this.CustomerOtherPhone = String.isNotBlank(customerRec.Formatted_Mobile_Number__c) ? customerRec.Formatted_Mobile_Number__c : '';
        this.CustomerEmail = (customerRec.Email__c != null) ? customerRec.Email__c : '';
        this.CustomerDriverLicenseNumber = (customerRec.Drivers_License__c != null) ? customerRec.Drivers_License__c : '';
        this.CustomerDOB = (customerRec.Birth_Date__c != null ? BPUtility.getFormatedDateTime(Datetime.newInstance(customerRec.Birth_Date__c.year(), 
        						customerRec.Birth_Date__c.month(), customerRec.Birth_Date__c.day())) : '');
       	this.CustomerAddress = this.CustomerStreetAddress1and2 + ' ' + this.CustomerCity + ' ' + this.CustomerState + ' ' + this.CustomerZIPCode;
        this.CustomerAddress = this.CustomerAddress.replace('\r\n',' ');
        this.CustomerAddress = this.CustomerAddress.replace('\n',' ');
        this.CustomerAddress = this.CustomerAddress.replace('\r',' ');
        this.CustomerDOBMonth01 = this.CustomerDOB.length() > 0 ? this.CustomerDOB.subString(0, 1) : '';
        this.CustomerDOBMonth02 = this.CustomerDOB.length() > 1 ? this.CustomerDOB.subString(1, 2) : '';
        this.CustomerDOBDay01 = this.CustomerDOB.length() > 3 ? this.CustomerDOB.subString(3, 4) : '';
        this.CustomerDOBDay02 = this.CustomerDOB.length() > 4 ? this.CustomerDOB.subString(4, 5) : '';
        this.CustomerDOBYear01 = this.CustomerDOB.length() > 6 ? this.CustomerDOB.subString(6, 7) : '';
        this.CustomerDOBYear02 = this.CustomerDOB.length() > 7 ? this.CustomerDOB.subString(7, 8) : '';
        this.CustomerDOBYear03 = this.CustomerDOB.length() > 8 ? this.CustomerDOB.subString(8, 9) : '';
        this.CustomerDOBYear04 = this.CustomerDOB.length() > 9 ? this.CustomerDOB.subString(9, 10) : '';
    }
    
    public void setDealFields(Deal__c dealRec) {
        DateTime invoicedDateTime =  (dealRec.Invoice_Number__r.Invoice_Date__c != null ? dealRec.Invoice_Number__r.Invoice_Date__c : system.now());
        this.DealInvoicedDate =  BPUtility.getFormatedDateTime(invoicedDateTime);
        this.DateInvoicedDay = invoicedDateTime.format('dd');
        this.DateInvoicedMonth =  invoicedDateTime.format('MM');
        this.DateInvoicedMonthName = invoicedDateTime.format('MMMMM');
        this.DateInvoicedYear = String.valueOf(invoicedDateTime.year());
        this.DealDeliveryDate =  (dealRec.Delivery_Date__c != null ? BPUtility.getFormatedDateTime(Datetime.newInstance(dealRec.Delivery_Date__c.year(), 
        						dealRec.Delivery_Date__c.month(), dealRec.Delivery_Date__c.day())) : '');
        this.DealInvoiceNumber = dealRec.Invoice_Number__r.Invoice_Number__c;
        this.DateToday = BPUtility.getFormatedDateTime(Date.today());
        this.DateTodayCopy1 = this.DateToday;
        this.DateTodayCopy2 = this.DateToday;
        this.DealSalesperson = String.isNotBlank(dealRec.Salesperson_Name__c) ? dealRec.Salesperson_Name__c: '';						
        this.DealFinanceDealTotal = formatToDecimal((dealRec.Deal_Total__c != null) ? dealRec.Deal_Total__c : 0);
        this.DealTotalSalesTaxes = formatToDecimal(dealRec.Sales_Tax_Total__c != null ? dealRec.Sales_Tax_Total__c.setScale(2, RoundingMode.HALF_UP) : 0);
        this.DealSalespersonFirstName = this.DealSalesperson.split(' ').size() > 0 ? this.DealSalesperson.split(' ')[0] : '';
        this.DealSalespersonLastName = this.DealSalesperson.split(' ').size() > 1 ? this.DealSalesperson.split(' ')[this.DealSalesperson.split(' ').size() - 1] : '';
    }

    public void setServiceFields(Service_Order_Header__c serviceOrderRecord) {
        this.ServiceConcern = serviceOrderRecord.SO_Concern__c;
        this.ServiceCause = serviceOrderRecord.SO_Cause__c;
        this.ServiceCorrection = serviceOrderRecord.SO_Correction__c;
        this.ServiceNotesforCustomer = serviceOrderRecord.SO_Notes_For_Customer__c;
        this.ServiceJobInvoice = serviceOrderRecord.Invoice_Number__r.Invoice_Number__c;
        this.ServiceJobUnitMake = (serviceOrderRecord.Customer_Owned_Unit__r.Unit_Make__c != null) ? serviceOrderRecord.Customer_Owned_Unit__r.Unit_Make__r.Name : '';
        this.ServiceJobUnitModel = (serviceOrderRecord.Customer_Owned_Unit__r.Unit_Model__c != null) ? serviceOrderRecord.Customer_Owned_Unit__r.Unit_Model__r.Name__c : '';
        this.ServiceJobUnitSubModel = (serviceOrderRecord.Customer_Owned_Unit__r.Sub_Model__c != null) ? serviceOrderRecord.Customer_Owned_Unit__r.Sub_Model__r.Sub_Model_Name__c : '';
        this.ServiceJobUnitYear = (serviceOrderRecord.Customer_Owned_Unit__r.Year__c != null) ? String.valueOf(serviceOrderRecord.Customer_Owned_Unit__r.Year__c) : '';
		this.ServiceJobUnitVIN = (serviceOrderRecord.Customer_Owned_Unit__r.VIN_Number__c != null) ? serviceOrderRecord.Customer_Owned_Unit__r.VIN_Number__c : '';
        this.ServiceJobUnitOdometer = (serviceOrderRecord.Customer_Owned_Unit__r.Mileage_Value__c != null) ? String.valueOf(serviceOrderRecord.Customer_Owned_Unit__r.Mileage_Value__c) : '';
        this.ServiceJobOdometerOnArrival = (serviceOrderRecord.Odometer_on_Arrival__c != null) ? String.valueOf(serviceOrderRecord.Odometer_on_Arrival__c) : '';
        this.ServiceJobOdometerOnDeparture = (serviceOrderRecord.Odometer_on_Departure__c != null) ? String.valueOf(serviceOrderRecord.Odometer_on_Departure__c) : '';
        integer index = 0;
        ServiceNotesforCustomerCamroseMotorsports = '';
        if(String.isNotBlank(ServiceNotesforCustomer)) {
          while (index < ServiceNotesforCustomer.length()) {
            ServiceNotesforCustomerCamroseMotorsports  += ServiceNotesforCustomer.substring(index, Math.min(index + 90,ServiceNotesforCustomer.length())) + '\n';
            index += 90;
          }
        }  
        if(String.isNotBlank(ServiceNotesforCustomerCamroseMotorsports)) {
          ServiceNotesforCustomerCamroseMotorsports = ServiceNotesforCustomerCamroseMotorsports.removeEnd('\n');
        }
        index = 0;
        ServiceConcernCamrose = '';
        if(String.isNotBlank(ServiceConcern)) {
          while (index < ServiceConcern.length()) {
            ServiceConcernCamrose  += ServiceConcern.substring(index, Math.min(index + 100,ServiceConcern.length())) + '\n';
            index += 100;
          }
        }  
        if(String.isNotBlank(ServiceConcernCamrose)) {
          ServiceConcernCamrose = ServiceConcernCamrose.removeEnd('\n');
        }
	  	index = 0;
        ServiceCauseCamrose = '';
        if(String.isNotBlank(ServiceCause)) {
          while (index < ServiceCause.length()) {
            ServiceCauseCamrose  += ServiceCause.substring(index, Math.min(index + 100,ServiceCause.length())) + '\n';
            index += 100;
          }
        }  
        if(String.isNotBlank(ServiceCauseCamrose)) {
          ServiceCauseCamrose = ServiceCauseCamrose.removeEnd('\n');
        }
		index = 0;
        ServiceCorrectionCamrose = '';
        if(String.isNotBlank(ServiceCorrection)) {
          while (index < ServiceCorrection.length()) {
            ServiceCorrectionCamrose  += ServiceCorrection.substring(index, Math.min(index + 100,ServiceCorrection.length())) + '\n';
            index += 100;
          }
        }  
        if(String.isNotBlank(ServiceCorrectionCamrose)) {
          ServiceCorrectionCamrose = ServiceCorrectionCamrose.removeEnd('\n');
		}
    }

    public void setServiceSOLIFields(List<Service_Order_Line_Item__c> soliList) {
        String ServiceJobItemsStr = '';
        String QtyServiceJobItemsStr = '';
        List<Decimal> qtyServiceJobItemsList = new List<Decimal>();
        for(Service_Order_Line_Item__c soLineItem : soliList) {
            ServiceJobItemsStr += soLineItem.Item_Code__c + ' - ' + soLineItem.Item_Description__c + '\n';
            QtyServiceJobItemsStr += formatToDecimal(soLineItem.Qty_Needed__c) + '\n';
        }
		this.ServiceJobItems = String.isNotBlank(ServiceJobItemsStr) ? ServiceJobItemsStr.left(ServiceJobItemsStr.length()-1) : '';
        this.QtyServiceJobItems = String.isNotBlank(QtyServiceJobItemsStr) ? QtyServiceJobItemsStr.left(QtyServiceJobItemsStr.length()-1) : '';
    }

    public void setFIProductFields(List<F_I_Product__c> fiProducts){
      for(F_I_Product__c fiProductItem : fiProducts){
        if(fiProductItem.Vendor_product__r.Description__c.contains('GAP')){
          this.GAPDescriptionPrice = formatToDecimal(fiProductItem.Vendor_product__r.price__c);
          this.GAPCodeUnitFeeDescription = fiProductItem.Vendor_product__r.Description__c;
          this.GAPVendorProductTerm = fiProductItem.Vendor_Product__r.Term__c != null ? String.valueOf(fiProductItem.Vendor_Product__r.Term__c) : '';
          break;
        }
      }
      if(String.isBlank(this.GAPDescriptionPrice)){
        this.GAPDescriptionPrice = '';
      }
      if(String.isBlank(this.GAPCodeUnitFeeDescription)){
        this.GAPCodeUnitFeeDescription = '';
      }
      if(String.isBlank(this.GAPVendorProductTerm)){
        this.GAPVendorProductTerm = '';
      }
    }
    
    public void setDealFinancingFields(Deal_Finance__c dealFinanceRec) {
    	this.FinanceCompany = dealFinanceRec.Finance_Company__r.Name;
        String financebillingStreet = (dealFinanceRec.Finance_Company__r.BillingStreet == null ) ? '' : dealFinanceRec.Finance_Company__r.BillingStreet;
        List<String> fbsList = financebillingStreet.split('\n');
        this.FinanceCompanyBillingAddress1 = (fbsList.size() > 0) ? fbsList[0].replace('\n', ' ') : '';
        this.FinanceCompanyBillingAddress2 = (fbsList.size() > 1) ? fbsList[1].replace('\n', ' ') : '';
        this.FinanceCompanyBillingAddress1and2 = this.FinanceCompanyBillingAddress1 + ' ' + this.FinanceCompanyBillingAddress2;
        this.FinanceCompanyBillingCity = dealFinanceRec.Finance_Company__r.BillingCity != null ? dealFinanceRec.Finance_Company__r.BillingCity : '';
        this.FinanceCompanyBillingState = dealFinanceRec.Finance_Company__r.BillingState != null ? dealFinanceRec.Finance_Company__r.BillingState : '';
        this.FinanceCompanyBillingZipCode = dealFinanceRec.Finance_Company__r.BillingPostalCode != null ? dealFinanceRec.Finance_Company__r.BillingPostalCode : '';
    	this.DealFinanceEstimatedPayment = formatToDecimal((dealFinanceRec.Estimated_Payment__c != null) ? dealFinanceRec.Estimated_Payment__c : 0);
    	this.DealFinanceLoanPayments = formatToDecimal(getLoanTerm(dealFinanceRec));
        this.DealFinanceInterestRate = formatToDecimal((dealFinanceRec.Interest_Rate__c != null) ? dealFinanceRec.Interest_Rate__c : 0 );
        this.DealFinanceLoanTerm = formatToDecimal((dealFinanceRec.Loan_Term__c != null) ? dealFinanceRec.Loan_Term__c : 0 );
        this.CoBuyerName = dealFinanceRec.Co_Buyer__c != null ? dealFinanceRec.Co_Buyer__r.Name : '';
        this.CoBuyerLicenseNumber = dealFinanceRec.Co_Buyer__c != null ? dealFinanceRec.Co_Buyer__r.Drivers_License__c : '';
	    this.DealFinancePaymentFrequency = dealFinanceRec.Payment_Frequency__c != null ? dealFinanceRec.Payment_Frequency__c : '';
        this.FinanceCompanyBillingAddressCityStateZipCode = (String.isNotBlank(this.FinanceCompanyBillingAddress1and2) ? this.FinanceCompanyBillingAddress1and2.trim().replace('\n','') + ' ' : '') + (String.isNotBlank(this.FinanceCompanyBillingCity) ? this.FinanceCompanyBillingCity + ' ' : '') + (String.isNotBlank(this.FinanceCompanyBillingState) ? this.FinanceCompanyBillingState + ' ' : '') + (String.isNotBlank(this.FinanceCompanyBillingZipCode) ? this.FinanceCompanyBillingZipCode : '');
        this.ProductDealFinanceEstimatedPaymentAndLoanTerm = formatToDecimal((String.isNotBlank(this.DealFinanceEstimatedPayment) ? Decimal.valueOf(this.DealFinanceEstimatedPayment.replaceAll(',','')) : 0) * (String.isNotBlank(this.DealFinanceLoanTerm) ? Decimal.valueOf(this.DealFinanceLoanTerm.replaceAll(',','')) : 0));

        if(dealFinanceRec.Co_Buyer__r.Type__c == 'Individual') {
            this.CoBuyerFirstName = (dealFinanceRec.Co_Buyer__r.FirstName__c != null) ? dealFinanceRec.Co_Buyer__r.FirstName__c : '';
            this.CoBuyerLastName = (dealFinanceRec.Co_Buyer__r.LastName__c != null) ? dealFinanceRec.Co_Buyer__r.LastName__c : '';
        } else {
            this.CoBuyerFirstName = '';
            this.CoBuyerLastName = (dealFinanceRec.Co_Buyer__r.Name != null)? dealFinanceRec.Co_Buyer__r.Name : '';
        }
        
        String billingStreet = (dealFinanceRec.Co_Buyer__r.BillingStreet == null ) ? '' : dealFinanceRec.Co_Buyer__r.BillingStreet;
        List<String> bsList = billingStreet.split('\n');
        this.CoBuyerAddress1 = (bsList.size() > 0) ? bsList[0].replace('\n', ' ') : '';
        this.CoBuyerAddress2 = (bsList.size() > 1) ? bsList[1].replace('\n', ' ') : '';
        this.CoBuyerStreetAddress1and2 = this.CoBuyerAddress1 + ' ' + this.CoBuyerAddress2;
        this.CoBuyerCity = dealFinanceRec.Co_Buyer__r.BillingCity != null ? dealFinanceRec.Co_Buyer__r.BillingCity : '';
        this.CoBuyerState = dealFinanceRec.Co_Buyer__r.BillingState != null ? dealFinanceRec.Co_Buyer__r.BillingState : '';
        this.CoBuyerZipCode = dealFinanceRec.Co_Buyer__r.BillingPostalCode != null ? dealFinanceRec.Co_Buyer__r.BillingPostalCode : '';
        this.CoBuyerBillingCityState = this.CoBuyerCity + ' ' + this.CoBuyerState;
        this.CoBuyerAddress = this.CoBuyerStreetAddress1and2 + ' ' + this.CoBuyerCity + ' ' +  this.CoBuyerState + ' ' + this.CoBuyerZipCode;
        this.CoBuyerBillingCityStateZIPCode = this.CoBuyerCity + ' ' + this.CoBuyerState + ' ' + this.CoBuyerZipCode;
    }
    
    public void setDealUnitFields(Deal_Item__c dealItemRec) {
        if(dealItemRec.Customer_Owned_Unit__c == null) {
            this.UnitMake = (dealItemRec.Unit_Make__c != null) ? dealItemRec.Unit_Make__r.Name : '';
            this.UnitModel = (dealItemRec.Unit_Model__c != null) ? dealItemRec.Unit_Model__r.Name__c : '';
            this.UnitSubModel = (dealItemRec.Sub_Model__c != null) ? dealItemRec.Sub_Model__r.Sub_Model_Name__c : '';
            this.UnitYear = dealItemRec.Year__c != null ? String.valueOf(dealItemRec.Year__c) : '';
            this.UnitVIN = '';
            this.UnitStockNumber = '';
            this.UnitExteriorColour = (dealItemRec.Colour__c != null) ? dealItemRec.Colour__c : '';
            this.UnitMakeModel = String.isNotBlank(this.UnitMake) ? this.UnitMake + ' ' + this.UnitModel : this.UnitModel;
            this.UnitRegistrationNumber = '';
            this.UnitComplianceDate = '';
        } else {
            this.UnitMake = (dealItemRec.Customer_Owned_Unit__r.Unit_Make__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Make__r.Name : '';
            this.UnitModel = (dealItemRec.Customer_Owned_Unit__r.Unit_Model__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Model__r.Name__c : '';
            this.UnitSubModel = (dealItemRec.Customer_Owned_Unit__r.Sub_Model__c != null) ? dealItemRec.Customer_Owned_Unit__r.Sub_Model__r.Sub_Model_Name__c : '';
            this.UnitYear = dealItemRec.Customer_Owned_Unit__r.Year__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Year__c) : '';
            this.UnitStockNumber = dealItemRec.Customer_Owned_Unit__r.Stock_Id__c;
            this.UnitExteriorColour = (dealItemRec.Customer_Owned_Unit__r.Colour__c != null) ? dealItemRec.Customer_Owned_Unit__r.Colour__c : '';
            this.UnitInteriorColour = (dealItemRec.Customer_Owned_Unit__r.Interior_Colour__c != null) ? dealItemRec.Customer_Owned_Unit__r.Interior_Colour__c : '';
            this.UnitMakeModel = String.isNotBlank(this.UnitMake) ? this.UnitMake + ' ' + this.UnitModel : this.UnitModel;
            this.UnitRegistrationExpirydate = dealItemRec.Customer_Owned_Unit__r.Reg_Expiry_Date__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Reg_Expiry_Date__c) : '';
            this.UnitYearFirstREGO = dealItemRec.Customer_Owned_Unit__r.Year_Of_1st_Rego__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Year_Of_1st_Rego__c) : '';
            this.UnitRegistrationNumber = dealItemRec.Customer_Owned_Unit__r.Plate__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Plate__c) : '';
            this.UnitEngineSize = dealItemRec.Customer_Owned_Unit__r.Displacement__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Displacement__c) : '';
            this.UnitOtherNumber = dealItemRec.Customer_Owned_Unit__r.Other_Serial_No__c != null ? dealItemRec.Customer_Owned_Unit__r.Other_Serial_No__c : '';
            this.UnitEngineNumber = dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c != null ? dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c : '';
            this.UnitOtherData01 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c : '';
            this.UnitOtherData02 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_02__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_02__c : '';
            this.UnitOtherData03 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_03__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_03__c : '';
            this.UnitOtherData04 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_04__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_04__c : '';
            this.UnitOtherData05 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_05__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_05__c : '';
            this.UnitOtherData06 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_06__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_06__c : '';
            this.UnitOtherData07 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_07__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_07__c : '';
            this.UnitOtherData11 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_11__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_11__c : '';
            this.UnitDateStockedin = dealItemRec.Customer_Owned_Unit__r.Date_Stocked_In__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Date_Stocked_In__c) : '';
            this.UnitOtherData08 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_08__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_08__c : '';
            this.UnitComplianceDate = dealItemRec.Customer_Owned_Unit__r.Compliance_Date__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Compliance_Date__c) : '';
            this.UnitNotes = dealItemRec.Customer_Owned_Unit__r.Notes__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Notes__c) : '';
            this.UnitCylinders = dealItemRec.Customer_Owned_Unit__r.Cylinders__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Cylinders__c) : '';
            this.UnitOtherData09 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_09__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_09__c : '';
            this.UnitOtherData10 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_10__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_10__c : '';
            this.UnitOtherData12 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_12__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_12__c : '';
            this.UnitOtherData13 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_13__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_13__c : '';
            this.UnitOtherData14 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_14__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_14__c : '';
            this.UnitDisplacement = dealItemRec.Customer_Owned_Unit__r.Displacement__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Displacement__c) : '';
            
            setUnitMileageFields(dealItemRec.Customer_Owned_Unit__r.Mileage_Value__c);
            setUnitVINFields(dealItemRec.Customer_Owned_Unit__r.VIN_Number__c);
        }
        if(String.isBlank(this.UnitRegistrationExpirydate)){
          this.UnitRegistrationExpirydate = '';
        }
        this.UnitRegistrationExpiryMonth01 = (this.UnitRegistrationExpirydate.length() > 5 ? this.UnitRegistrationExpirydate.subString(5, 6) : '');
        this.UnitRegistrationExpiryMonth02 = (this.UnitRegistrationExpirydate.length() > 6 ? this.UnitRegistrationExpirydate.subString(6, 7) : '');
        this.UnitRegistrationExpiryDay01 = (this.UnitRegistrationExpirydate.length() > 8 ? this.UnitRegistrationExpirydate.subString(8, 9) : '');
        this.UnitRegistrationExpiryDay02 = (this.UnitRegistrationExpirydate.length() > 9 ? this.UnitRegistrationExpirydate.subString(9, 10) : '');
        this.UnitRegistrationExpiryYear01 = (this.UnitRegistrationExpirydate.length() > 0 ? this.UnitRegistrationExpirydate.subString(0, 1) : '');
        this.UnitRegistrationExpiryYear02 = (this.UnitRegistrationExpirydate.length() > 1 ? this.UnitRegistrationExpirydate.subString(1, 2) : '');
        this.UnitRegistrationExpiryYear03 = (this.UnitRegistrationExpirydate.length() > 2 ? this.UnitRegistrationExpirydate.subString(2, 3) : '');
        this.UnitRegistrationExpiryYear04 = (this.UnitRegistrationExpirydate.length() > 3 ? this.UnitRegistrationExpirydate.subString(3, 4) : '');
        this.UnitComplianceDateMonth01 = (this.UnitComplianceDate.length() > 0 ? this.UnitComplianceDate.subString(0, 1) : '');
        this.UnitComplianceDateMonth02 = (this.UnitComplianceDate.length() > 1 ? this.UnitComplianceDate.subString(1, 2) : '');
        this.UnitComplianceDateYear01 = (this.UnitComplianceDate.length() > 3 ? '2' : '');
        this.UnitComplianceDateYear02 = (this.UnitComplianceDate.length() > 3 ? '0' : '');
        this.UnitComplianceDateYear03 = (this.UnitComplianceDate.length() > 3 ? this.UnitComplianceDate.subString(3, 4) : '');
        this.UnitComplianceDateYear04 = (this.UnitComplianceDate.length() > 4 ? this.UnitComplianceDate.subString(4, 5) : '');
        integer index = 0;
        UnitNotesGleeson = '';
        if(String.isNotBlank(UnitNotes)) {
            while (index < UnitNotes.length()) {
                if (UnitNotes.substring(index, Math.min(index + 50,UnitNotes.length())).Contains('\n')){
                    integer indexOfNewLine = UnitNotes.indexOf('\n',index);
                    UnitNotesGleeson  += UnitNotes.substring(index,indexOfNewLine) + '\n';
                    index = indexOfNewLine + 1;
                }
                else{
                    UnitNotesGleeson  += UnitNotes.substring(index, Math.min(index + 45,UnitNotes.length())) + '\n';
                    index += 45;
                }      
            }
        }  
        if(String.isNotBlank(UnitNotesGleeson)) {
          UnitNotesGleeson = UnitNotesGleeson.removeEnd('\n');
        }
        this.UnitDescription = this.UnitYear + ' ' + this.UnitMake + ' ' + this.UnitModel + ' ' + this.UnitSubModel;
        
        Decimal totalStampDutyDec = (dealItemRec.Stamp_Duty_Total__c != null) ? dealItemRec.Stamp_Duty_Total__c : 0;
        Decimal unitTotalBasePriceDec = 0;
        Decimal unitTotalFactoryOptionsDec = 0;
        Decimal unitTotalDealerInstalledOptionsDec = 0;
        Decimal unitTotalPriceWithTaxDec = 0;
        Decimal unitTotalSalesTax = 0;
        
        for(Deal_Unit_Price_Cost__c dealUPCRec : dealItemRec.Deal_Unit_Prices_Costs__r){
            if(dealUPCRec.Type__c == 'Factory'){
                unitTotalFactoryOptionsDec += (dealUPCRec.Total_Price__c != null) ? dealUPCRec.Total_Price__c : 0;
            } else if(dealUPCRec.Type__c == 'Dealer') {
                unitTotalDealerInstalledOptionsDec += (dealUPCRec.Total_Price__c != null) ? dealUPCRec.Total_Price__c : 0;
            } else if(dealUPCRec.Type__c == 'Base') {
                unitTotalBasePriceDec += getBasePrice(dealUPCRec);
            }

            unitTotalSalesTax += (dealUPCRec.Qty__c * dealUPCRec.Price__c * dealUPCRec.Sales_Tax_Percentage__c)/100;
            unitTotalPriceWithTaxDec += ((dealUPCRec.Qty__c * dealUPCRec.Price__c)*(1 + dealUPCRec.Sales_Tax_Percentage__c/100));
        }
        unitTotalSalesTax = unitTotalSalesTax.setScale(2, RoundingMode.HALF_UP);
        unitTotalPriceWithTaxDec = unitTotalPriceWithTaxDec.setScale(2, RoundingMode.HALF_UP);
        Decimal unitTotalPriceWithNonFeeOptionsDec = 0;
        Decimal unitTotalPriceDec = 0;
        Decimal unitPriceWithPartLabourDec = 0;
        Decimal unitTotalOptionsPartsDec = 0;
        Decimal unitTotalOptionsLabourDec = 0;
        Decimal unitTotalOptionsSubletDec = 0;
        Decimal unitTotalPriceWithoutOptionDec = 0;
        unitTotalPriceDec = unitPriceWithPartLabourDec = unitTotalPriceWithNonFeeOptionsDec = unitTotalPriceWithoutOptionDec = 
					(unitTotalBasePriceDec + unitTotalFactoryOptionsDec + unitTotalDealerInstalledOptionsDec + totalStampDutyDec).setScale(2, RoundingMode.HALF_UP);
				
        Integer untaggedFeeCounter = 0;
        Integer untaggedPartCounter = 0;
        
        Decimal unitFeeGasTagUnitFeeDec = 0;
        Decimal unitFeeLicTagUnitFeeDec = 0;
        Decimal unitFeeWARRUnitFeeDec = 0;
    	Decimal unitFeeDOCTagUnitFee = 0;
		Decimal unitFeeREGTagUnitFee = 0;
		Decimal unitFeeINSTagUnitFee = 0;
        Decimal UnitTotalOptionsAndFeesDec = 0;
        decimal totalUnitFeeWithNoTag = 0;
        Decimal adminTagUnitFee = 0;
        Decimal unitFeeTITLETagUnitFee = 0;
		Decimal docCodeUnitFee = 0;
		Decimal tefCodeUnitFee = 0;
		Decimal warrCodeUnitFee = 0;
		Decimal frtCodeUnitFee = 0;
		Decimal pdiCodeUnitFee = 0;
		Decimal stateCodeUnitFee = 0;
        Decimal frtoutCodeUnitFee = 0;
        Decimal gapCodeUnitFee = 0;
        Decimal title_FeeCodeUnitFee = 0;
        Decimal escCodeUnitFee = 0;
        Decimal nintyDay_WarrantyFeeCodeUnitFee = 0;
        Decimal prepaid_MaintenanceFeeCodeUnitFee = 0;
        Decimal registrationFeeCodeUnitFee = 0;
        Decimal plateTransferFeeCodeUnitFee = 0;
        Decimal vinInspectionFeeCodeUnitFee = 0;
        Decimal vinTradeFeeCodeUnitFee = 0;
        String docCodeFeeName = '';
        String escCodeFeeName = '';
        String nintyDayWarrantyCodeFeeName = '';
        String prepaidMaintenanceCodeFeeName = '';
        Decimal discCodeUnitFee = 0;
        Decimal license1CodeUnitFee = 0;
        Decimal payableDeliveryUnitFee = 0;
        Decimal rebateCodeFeePrice = 0;
        Decimal unitFeeTRANTagUnitFee = 0;

        List<String> UnitOptionLaborCodeNameList = new List<String>();
        
        this.UnitOptionListing = '';
        boolean firstOccurrence = false;
        
        DealItem dealItemObj = new DealItem();
        for(Option_Fee__c optionAndFeeRec : dealItemRec.Options_Fees__r) {
        	Decimal totalPrice = getOptionAndFeePrice(optionAndFeeRec);
            unitTotalPriceDec += totalPrice;
            UnitTotalOptionsAndFeesDec += totalPrice;
            if(optionAndFeeRec.Sales_Tax_Percentage__c != null){
                unitTotalSalesTax += (optionAndFeeRec.Qty__c * optionAndFeeRec.Price__c * optionAndFeeRec.Sales_Tax_Percentage__c)/100;
                unitTotalPriceWithTaxDec += ((optionAndFeeRec.Qty__c * optionAndFeeRec.Price__c)*(1 + optionAndFeeRec.Sales_Tax_Percentage__c/100));
            }
            
            this.UnitOptionListing += (optionAndFeeRec.Item_Code__c != null ? optionAndFeeRec.Item_Code__c : '') + '\t';
            this.UnitOptionListing += (optionAndFeeRec.Item_Description__c != null ? optionAndFeeRec.Item_Description__c : '') + '\t';
            this.UnitOptionListing += '$' + formatToDecimal(totalPrice) + '\n';

            if(!firstOccurrence && optionAndFeeRec.Product__c != null && optionAndFeeRec.Product__r.Description__c.contains('GAP')) {
                this.GAPCodeUnitFeeDescription = optionAndFeeRec.Product__r.Description__c;
                this.GAPVendorProductTerm = optionAndFeeRec.Product__r.Term__c != null ? String.valueOf(optionAndFeeRec.Product__r.Term__c) : '';
                this.GAPDescriptionPrice = formatToDecimal(optionAndFeeRec.Product__r.price__c);
                firstOccurrence = true;
            }
            
            if(optionAndFeeRec.Fee__c == null) {
            	unitTotalPriceWithNonFeeOptionsDec += totalPrice;

            	if(optionAndFeeRec.Part__c != null) {
	            	unitPriceWithPartLabourDec += totalPrice; 
                    if(String.isBlank(optionAndFeeRec.Part__r.Assigned_Tag_1__c) && String.isBlank(optionAndFeeRec.Part__r.Assigned_Tag_2__c)) {
                        setUnitPartWithNoTagFields(++untaggedPartCounter, optionAndFeeRec.Item_Description__c, totalPrice);
                    }  
	            }
                if(optionAndFeeRec.Labour_Code__c != null) {
	            	unitPriceWithPartLabourDec += totalPrice; 
                    UnitOptionLaborCodeNameList.add(optionAndFeeRec.Labour_Code__r.Name__c);
	            }
                if(optionAndFeeRec.Product__c != null && optionAndFeeRec.Product__r.Type__c == Constants.SUBLET) {
                    unitTotalOptionsSubletDec += totalPrice;
	            }
	            
	            unitTotalOptionsPartsDec += (optionAndFeeRec.Part__c != null ? totalPrice : 0);
	            unitTotalOptionsLabourDec += (optionAndFeeRec.Labour_Code__c != null ? totalPrice : 0);
            } else if(optionAndFeeRec.Fee__c != null) {
				if(String.isNotBlank(optionAndFeeRec.Fee__r.Code__c)){
					if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('DOC')){
						docCodeUnitFee += totalPrice;
                        docCodeFeeName += optionAndFeeRec.Fee__r.Code__c;
					}
					if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('TEF')){
						tefCodeUnitFee += totalPrice;
					}
					if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('WARR')){
						warrCodeUnitFee += totalPrice;
					}
					if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTUTV') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTSXS') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTATV') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTUTV 22') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTSXS 22') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTATV 22')){
						frtCodeUnitFee += totalPrice;
					}
					if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('PDISXS') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('PDIATV')){
						pdiCodeUnitFee += totalPrice;
					}
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('State Fee') || optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('State Fees')){
                      stateCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('FRTOUT')){
                        frtoutCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('GAP')){
                        gapCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('Title Fee')){
                        title_FeeCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('ESC')){
                        escCodeUnitFee += totalPrice;
                        escCodeFeeName += optionAndFeeRec.Fee__r.Code__c;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('90 Day Warranty')){
                        nintyDay_WarrantyFeeCodeUnitFee += totalPrice;
                        nintyDayWarrantyCodeFeeName += optionAndFeeRec.Fee__r.Code__c;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('Prepaid Maintenance')){
                        prepaid_MaintenanceFeeCodeUnitFee += totalPrice;
                        prepaidMaintenanceCodeFeeName += optionAndFeeRec.Fee__r.Code__c;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('Registration Fee')){
                        registrationFeeCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('Plate Transfer')){
                        plateTransferFeeCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('VIN Inspection')){
                        vinInspectionFeeCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('VIN Trade')){
                        vinTradeFeeCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('DISC')){
                        discCodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('License1')){
                        license1CodeUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('PAYABLE DELIVERY')){
                        payableDeliveryUnitFee += totalPrice;
                    }
                    if(optionAndFeeRec.Fee__r.Code__c.equalsIgnoreCase('Rebate')){
                        rebateCodeFeePrice += totalPrice;
                    }
                }
                
            	if(String.isBlank(optionAndFeeRec.Fee__r.Assigned_Tag_1__c) && String.isBlank(optionAndFeeRec.Fee__r.Assigned_Tag_2__c)) {
                    decimal unitFeePrice = GeneralConfiguration.getTaxIncludingPricing() ? optionAndFeeRec.Price_When_Tax_Included__c : optionAndFeeRec.Price__c;
                    totalUnitFeeWithNoTag += unitFeePrice;
                    setUnitFeeWithNoTagFields(++untaggedFeeCounter, optionAndFeeRec.Item_Description__c, unitFeePrice);
            	} else {
			    	if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'GAS') || 
			    										dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'GAS')) {
			    		unitFeeGasTagUnitFeeDec += totalPrice;
			    	} 
			    	if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'LIC') || 
    													dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'LIC')) {
			    		unitFeeLicTagUnitFeeDec += totalPrice;
			    	} 
			    	if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'WARR') || 
			    										dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'WARR')) {
			    		unitFeeWARRUnitFeeDec += totalPrice;
			    	}
			        if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'DOC') || 
                              dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'DOC')) {
                        unitFeeDOCTagUnitFee += totalPrice;
            	    }
                    if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'REG') || 
                                    dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'REG')) {
                        unitFeeREGTagUnitFee += totalPrice;
                    }
                    if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'INS') || 
                                    dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'INS')) {
                        unitFeeINSTagUnitFee += totalPrice;
                    }
                    if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'ADMIN') || 
                              dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'ADMIN')) {
                        adminTagUnitFee += totalPrice;
                    }
                    if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'TITLE') ||
                              dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'TITLE')){
                        unitFeeTITLETagUnitFee += totalPrice;
                    }
                    if(dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_1__c, 'TRAN') || dealItemObj.isRequiredTagExistOnFee(optionAndFeeRec.Fee__r.Assigned_Tag_2__c, 'TRAN')) {
                        unitFeeTRANTagUnitFee += totalPrice;
                    }
                }
            }
        }
        unitTotalPriceWithTaxDec = unitTotalPriceWithTaxDec.setScale(2, RoundingMode.HALF_UP);
        unitTotalSalesTax = unitTotalSalesTax.setScale(2, RoundingMode.HALF_UP);
        this.UnitInvoiceDate = dealItemRec.deal__r.Invoice_Number__c != null &&  dealItemRec.deal__r.Invoice_Number__r.Invoice_Date__c != null ?  BPUtility.getFormatedDateTime(dealItemRec.deal__r.Invoice_Number__r.Invoice_Date__c) : null;
        this.TotalStampduty = formatToDecimal(totalStampDutyDec);
        this.UnitTotalBasePrice = formatToDecimal(unitTotalBasePriceDec);
        this.UnitTotalFactoryOptions = formatToDecimal(unitTotalFactoryOptionsDec);
        this.UnitTotalDealerInstalledOptions = formatToDecimal(unitTotalDealerInstalledOptionsDec);
        this.UnitTotalPriceWithNonFeeOptions = formatToDecimal(unitTotalPriceWithNonFeeOptionsDec);
        this.UnitTotalPriceWithPartLabour = formatToDecimal(unitPriceWithPartLabourDec);
        this.UnitTotalPrice = formatToDecimal(unitTotalPriceWithoutOptionDec);
        this.UnitTotalSalesTax = formatToDecimal(unitTotalSalesTax);
        this.UnitTotalOptionsParts = formatToDecimal(unitTotalOptionsPartsDec);
        this.UnitTotalOptionsLabor = formatToDecimal(unitTotalOptionsLabourDec);
        this.UnitAllOptionLaborCodeName = string.join(UnitOptionLaborCodeNameList,',');
        this.UnitTotalOptionsPartsAndLabor = formatToDecimal(unitTotalOptionsPartsDec + unitTotalOptionsLabourDec);
        this.UnitTotalOptionsPartsLaborAndSublet = formatToDecimal(unitTotalOptionsPartsDec + unitTotalOptionsLabourDec + unitTotalOptionsSubletDec);
        this.UnitTotalOptionsPartsAndSublet = formatToDecimal(unitTotalOptionsPartsDec + unitTotalOptionsSubletDec);
        this.UnitFeeGasTagUnitFee = formatToDecimal(unitFeeGasTagUnitFeeDec);
        this.UnitFeeLicTagUnitFee = formatToDecimal(unitFeeLicTagUnitFeeDec);
        this.UnitFeeWARRUnitFee = formatToDecimal(unitFeeWARRUnitFeeDec);
		this.UnitFeeDOCTagUnitFee = formatToDecimal(unitFeeDOCTagUnitFee);
		this.UnitFeeREGTagUnitFee = formatToDecimal(unitFeeREGTagUnitFee);
		this.UnitFeeINSTagUnitFee = formatToDecimal(unitFeeINSTagUnitFee);
		this.DOCCodeUnitFee = formatToDecimal(docCodeUnitFee);
		this.TEFCodeUnitFee = formatToDecimal(tefCodeUnitFee);
		this.WARRCodeUnitFee = formatToDecimal(warrCodeUnitFee);
		this.FRTCodeUnitFee = formatToDecimal(frtCodeUnitFee);
		this.PDICodeUnitFee = formatToDecimal(pdiCodeUnitFee);
		this.StateCodeUnitFee = formatToDecimal(stateCodeUnitFee);
        this.FRTOUTCodeUnitFee = formatToDecimal(frtoutCodeUnitFee);
        this.ADMINTagUnitFee = formatToDecimal(adminTagUnitFee);
        this.UnitFeeTITLETagUnitFee = formatToDecimal(unitFeeTITLETagUnitFee);
        this.GAPCodeUnitFee = formatToDecimal(gapCodeUnitFee);
        this.Title_FeeCodeUnitFee = formatToDecimal(title_FeeCodeUnitFee);
        this.ESCCodeUnitFee = formatToDecimal(escCodeUnitFee);
        this.NintyDay_WarrantyFeeCodeUnitFee = formatToDecimal(nintyDay_WarrantyFeeCodeUnitFee);
        this.Prepaid_MaintenanceFeeCodeUnitFee = formatToDecimal(prepaid_MaintenanceFeeCodeUnitFee);
        this.RegistrationFeeCodeUnitFee = formatToDecimal(registrationFeeCodeUnitFee);
        this.PlateTransferFeeCodeUnitFee = formatToDecimal(plateTransferFeeCodeUnitFee);
        this.VINInspectionFeeCodeUnitFee = formatToDecimal(vinInspectionFeeCodeUnitFee);
        this.VINTradeFeeCodeUnitFee = formatToDecimal(vinTradeFeeCodeUnitFee);
        this.DISCCodeUnitFee = formatToDecimal(discCodeUnitFee);
        this.UnitTotalPricePlusOptionsTax =  GeneralConfiguration.getTaxIncludingPricing() ? formatToDecimal(unitTotalPriceDec) : formatToDecimal(unitTotalPriceWithTaxDec);
        this.UnitTotalOptionsAndFees = formatToDecimal(UnitTotalOptionsAndFeesDec);
        this.UnitTotalPriceWithAllOptions = formatToDecimal(unitTotalPriceWithoutOptionDec + UnitTotalOptionsAndFeesDec);
        this.WarrantyAndNoTagFeeUnitTotal = formatToDecimal(unitPriceWithPartLabourDec + unitFeeWARRUnitFeeDec + totalUnitFeeWithNoTag);
		this.UnitTotalPriceLaborRegInsTagFee = formatToDecimal(unitTotalPriceWithoutOptionDec + unitTotalOptionsLabourDec + unitFeeREGTagUnitFee + unitFeeINSTagUnitFee);
        this.SumOfBasePriceSalesTaxAndDOCFee = formatToDecimal(unitTotalBasePriceDec + unitTotalSalesTax + docCodeUnitFee);
        this.SumOfRegistrationPlateTransferVINInspectionAndVINTrade = formatToDecimal(registrationFeeCodeUnitFee + PlateTransferFeeCodeUnitFee + vinInspectionFeeCodeUnitFee + vinTradeFeeCodeUnitFee);
        this.DOCCodeFeeName = docCodeFeeName;
        this.ESCCodeFeeName = escCodeFeeName;
        this.NintyDayWarrantyCodeFeeName = nintyDayWarrantyCodeFeeName;
        this.PrepaidMaintenanceCodeFeeName = prepaidMaintenanceCodeFeeName;
        this.License1CodeUnitFee = formatToDecimal(license1CodeUnitFee);
        this.PayableDeliveryUnitFee = formatToDecimal(payableDeliveryUnitFee);
        this.RebateCodeFeePrice = formatToDecimal(rebateCodeFeePrice);
        this.UnitFeeTRANTagUnitFee = formatToDecimal(unitFeeTRANTagUnitFee);
    }
    	
	public void setSecondDealUnitFields(Deal_Item__c dealItemRec) {
		this.SecondUnitMake = (dealItemRec.Customer_Owned_Unit__r.Unit_Make__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Make__r.Name : '';
        this.SecondUnitModel = (dealItemRec.Customer_Owned_Unit__r.Unit_Model__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Model__r.Name__c : '';
        this.SecondUnitVIN = dealItemRec.Customer_Owned_Unit__r.VIN_Number__c != null ? dealItemRec.Customer_Owned_Unit__r.VIN_Number__c : '';
        this.SecondUnitYear = dealItemRec.Customer_Owned_Unit__r.Year__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Year__c) : '';
		this.SecondUnitRegistrationNumber = dealItemRec.Customer_Owned_Unit__r.Plate__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Plate__c) : '';
		this.SecondUnitEngineNumber = dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c != null ? dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c : '';
		this.SecondUnitOtherData01 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c : '';
		this.SecondUnitExteriorColour = (dealItemRec.Customer_Owned_Unit__r.Colour__c != null) ? dealItemRec.Customer_Owned_Unit__r.Colour__c : '';
    }
	
    public void setAllDealUnitFields(List<Deal_Item__c> dealItemRecords) {
        Decimal DealTotalPartsAndLaborAmountTemp = 0;
		Decimal dealTotalPartLaborAndFee = 0;
		Decimal dealTotalOptionPart = 0;
		Decimal dealTotalOptionLabor = 0;
		Decimal dealTotalFee = 0;
        Decimal dealRideAwayPrice = 0;
		List<String> dealPartFeeDescriptionList = new List<String>();
	    Decimal dealTotalUnitAmount = 0;

        for(Deal_Item__c  dealItemRec : dealItemRecords) {
            Decimal unitTotalOptionsParts = 0;
            Decimal unitTotalOptionsLabour = 0;
			Decimal unitTotalOptionFee = 0;
            for(Option_Fee__c optionAndFeeRec : dealItemRec.Options_Fees__r) {
                if(optionAndFeeRec.Fee__c != null || optionAndFeeRec.Part__c != null){
                    dealPartFeeDescriptionList.add(optionAndFeeRec.Item_Code__c+'-'+optionAndFeeRec.Item_Description__c);
                }
                if(optionAndFeeRec.Fee__c != null) {
                    unitTotalOptionFee += GeneralConfiguration.getTaxIncludingPricing() ? optionAndFeeRec.Price_When_Tax_Included__c : optionAndFeeRec.Price__c;
                }
                Decimal totalPrice = getOptionAndFeePrice(optionAndFeeRec);
                unitTotalOptionsParts += (optionAndFeeRec.Part__c != null ? totalPrice : 0);
                unitTotalOptionsLabour += (optionAndFeeRec.Labour_Code__c != null ? totalPrice : 0);
            }
			dealTotalOptionPart += unitTotalOptionsParts;
			dealTotalOptionLabor += unitTotalOptionsLabour;
			dealTotalFee += unitTotalOptionFee;
			dealTotalPartLaborAndFee += unitTotalOptionsParts + unitTotalOptionsLabour + unitTotalOptionFee;
            DealTotalPartsAndLaborAmountTemp += unitTotalOptionsParts + unitTotalOptionsLabour;

	        if(String.isNotBlank(dealItemRec.Type__c) && dealItemRec.Type__c == 'Unit'){
	    	    for(Deal_Unit_Price_Cost__c dupcRecord : dealItemRec.Deal_Unit_Prices_Costs__r){
			        if(dupcRecord.Type__c == 'Factory' || dupcRecord.Type__c == 'Dealer'){
				        dealTotalUnitAmount += (dupcRecord.Total_Price__c != null) ? dupcRecord.Total_Price__c : 0;
			        } else if(dupcRecord.Type__c == 'Base') {
				        dealTotalUnitAmount += getBasePrice(dupcRecord);
			        }
		        }
	        }
            dealRideAwayPrice += dealItemRec.Rideaway_Pricing_Total__c != null ? dealItemRec.Rideaway_Pricing_Total__c : 0;
        }
        this.DealPartAndFee = string.join(dealPartFeeDescriptionList,'\n');
		this.DealTotalOptionsParts = formatToDecimal(dealTotalOptionPart);
		this.DealTotalOptionsLabor = formatToDecimal(dealTotalOptionLabor);
		this.DealTotalFee = formatToDecimal(dealTotalFee);
		this.DealTotalPartLaborAndFee = formatToDecimal(dealTotalPartLaborAndFee);
        this.DealTotalPartsAndLaborAmount = formatToDecimal(DealTotalPartsAndLaborAmountTemp);
	    this.DealTotalUnitAmount = formatToDecimal(dealTotalUnitAmount);
        this.DealRideAwayPrice = formatToDecimal(dealRideAwayPrice);
        for(String dealPartFeeDescriptionItem : dealPartFeeDescriptionList){
            integer index = 0;
            if(String.isNotBlank(dealPartFeeDescriptionItem)){
                while (index < dealPartFeeDescriptionItem.length()){
                    DealPartAndFeeFarnleysYamaha += dealPartFeeDescriptionItem.substring(index, Math.min(index + 40,dealPartFeeDescriptionItem.length())) + '\n';
                    index += 40;
                }
            }
        }
        if(String.isNotBlank(DealPartAndFeeFarnleysYamaha)) {
          DealPartAndFeeFarnleysYamaha = DealPartAndFeeFarnleysYamaha.removeEnd('\n');
        }
    }

	public void setFirstFiveOptionFeeAndPart(List<Deal_Item__c> dealItemRecords){
		List<String> dealPartFeeDescriptionList = new List<String>();
		List<String> dealPartAndFeePriceList = new List<STring>();
		List<String> dealPartDescriptionList = new List<String>();
        List<String> dealPartPriceList = new List<STring>();
        Decimal totalDealPartPrice = 0;

		for(Deal_Item__c  dealItemRec : dealItemRecords) {
			for(Option_Fee__c optionAndFeeRec : dealItemRec.Options_Fees__r) {
				String dealPartAndFeePrice = '';
                if(optionAndFeeRec.Fee__c != null || optionAndFeeRec.Part__c != null){
                    dealPartFeeDescriptionList.add(optionAndFeeRec.Item_Code__c+'-'+optionAndFeeRec.Item_Description__c);
                    dealPartAndFeePrice = GeneralConfiguration.getTaxIncludingPricing() ? String.valueOf((optionAndFeeRec.Price_When_Tax_Included__c*optionAndFeeRec.Qty__c).setScale(2, RoundingMode.HALF_UP)) : String.valueOf((optionAndFeeRec.Price__c*optionAndFeeRec.Qty__c).setScale(2, RoundingMode.HALF_UP));
					dealPartAndFeePriceList.add(dealPartAndFeePrice);
                }
                if(optionAndFeeRec.Part__c != null){
                    dealPartDescriptionList.add(optionAndFeeRec.Item_Code__c+'-'+optionAndFeeRec.Item_Description__c);
                    String dealPartPrice = GeneralConfiguration.getTaxIncludingPricing() ? String.valueOf((optionAndFeeRec.Price_When_Tax_Included__c*optionAndFeeRec.Qty__c).setScale(2, RoundingMode.HALF_UP)) : String.valueOf((optionAndFeeRec.Price__c*optionAndFeeRec.Qty__c).setScale(2, RoundingMode.HALF_UP));
                    dealPartPriceList.add(dealPartPrice);
                    totalDealPartPrice += (String.isNotBlank(dealPartPrice) ? Decimal.valueOf(dealPartPrice.replaceAll(',','')) : 0);
                }
			}
		}
        this.TotalDealPartPrice = formatToDecimal(totalDealPartPrice);
        this.DealPartDescriptionList = string.join(dealPartDescriptionList,'\n');
        this.DealPartPriceList = string.join(dealPartPriceList,'\n');

		if(dealPartFeeDescriptionList.size() > 0){
			this.DealPartAndFeeName1 = dealPartFeeDescriptionList.get(0);
			this.DealPartAndFeePrice1 = dealPartAndFeePriceList.get(0);
		}
		if(dealPartFeeDescriptionList.size() > 1){
			this.DealPartAndFeeName2 = dealPartFeeDescriptionList.get(1);
			this.DealPartAndFeePrice2 = dealPartAndFeePriceList.get(1);
		}
		if(dealPartFeeDescriptionList.size() > 2){
			this.DealPartAndFeeName3 = dealPartFeeDescriptionList.get(2);
			this.DealPartAndFeePrice3 = dealPartAndFeePriceList.get(2);
		}
		if(dealPartFeeDescriptionList.size() > 3){
			this.DealPartAndFeeName4 = dealPartFeeDescriptionList.get(3);
			this.DealPartAndFeePrice4 = dealPartAndFeePriceList.get(3);
		}
		if(dealPartFeeDescriptionList.size() > 4){
			this.DealPartAndFeeName5 = dealPartFeeDescriptionList.get(4);
			this.DealPartAndFeePrice5 = dealPartAndFeePriceList.get(4);
		}
	}

    public void setDealTradeInFields(Deal_Item__c dealItemRec) {
    	if(dealItemRec.Customer_Owned_Unit__c == null) {
            this.TradeInUnitMake = (dealItemRec.Unit_Make__c != null) ? dealItemRec.Unit_Make__r.Name : '';
            this.TradeInUnitModel = (dealItemRec.Unit_Model__c != null) ? dealItemRec.Unit_Model__r.Name__c : '';
            this.TradeInUnitSubModel = (dealItemRec.Sub_Model__c != null) ? dealItemRec.Sub_Model__r.Sub_Model_Name__c : '';
            this.TradeInUnitYear = dealItemRec.Year__c != null ? String.valueOf(dealItemRec.Year__c) : '';
            this.TradeInUnitVIN = '';
            this.TradeInUnitExteriorColour = (dealItemRec.Colour__c != null) ? dealItemRec.Colour__c : '';
            this.TradeInUnitEngineNumber = '';
			this.TradeInUnitStockNumber = '';			
        } else {
            this.TradeInUnitMake = (dealItemRec.Customer_Owned_Unit__r.Unit_Make__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Make__r.Name : '';
            this.TradeInUnitModel = (dealItemRec.Customer_Owned_Unit__r.Unit_Model__c != null) ? dealItemRec.Customer_Owned_Unit__r.Unit_Model__r.Name__c : '';
            this.TradeInUnitSubModel = (dealItemRec.Customer_Owned_Unit__r.Sub_Model__c != null) ? dealItemRec.Customer_Owned_Unit__r.Sub_Model__r.Sub_Model_Name__c : '';
            this.TradeInUnitYear = dealItemRec.Customer_Owned_Unit__r.Year__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Year__c) : '';
            this.TradeInUnitExteriorColour = (dealItemRec.Customer_Owned_Unit__r.Colour__c != null) ? dealItemRec.Customer_Owned_Unit__r.Colour__c : '';
            this.TradeInUnitEngineSize = dealItemRec.Customer_Owned_Unit__r.Displacement__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Displacement__c) : '';
            this.TradeInUnitYearFirstREGO = dealItemRec.Customer_Owned_Unit__r.Year_Of_1st_Rego__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Year_Of_1st_Rego__c) : '';
            this.TradeInUnitOtherNumber = dealItemRec.Customer_Owned_Unit__r.Other_Serial_No__c != null ? dealItemRec.Customer_Owned_Unit__r.Other_Serial_No__c : '';
			this.TradeInUnitOtherData01 = dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c != null ? dealItemRec.Customer_Owned_Unit__r.Unit_Data_01__c : '';
            this.TradeInUnitRegistriationNumber = dealItemRec.Customer_Owned_Unit__r.Plate__c != null ? dealItemRec.Customer_Owned_Unit__r.Plate__c : '';
            this.TradeInUnitRegistrationExpirydate = dealItemRec.Customer_Owned_Unit__r.Reg_Expiry_Date__c != null ? String.valueOf(dealItemRec.Customer_Owned_Unit__r.Reg_Expiry_Date__c) : '';
            this.TradeInUnitEngineNumber = dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c != null ? dealItemRec.Customer_Owned_Unit__r.Engine_Serial_No__c : '';
			this.TradeInUnitStockNumber = dealItemRec.Customer_Owned_Unit__r.Stock_Id__c;
            
	        setTradeInUnitMileageFields(dealItemRec.Customer_Owned_Unit__r.Mileage_Value__c);
            setTradeInUnitVINFields(dealItemRec.Customer_Owned_Unit__r.VIN_Number__c);
        }
        this.TradeInUnitDescription = this.TradeInUnitYear + ' ' + this.TradeInUnitMake + ' ' + this.TradeInUnitModel + ' ' + this.TradeInUnitSubModel;
        
        Decimal agreedValue = dealItemRec.Agreed_Value__c != null ? dealItemRec.Agreed_Value__c.setScale(2, RoundingMode.HALF_UP) : 0;
        Decimal lienPayout = dealItemRec.Lien_Payout__c != null ? dealItemRec.Lien_Payout__c : 0;
        this.TradeInTotal = formatToDecimal(agreedValue);
        //this.TaxableAmountAfterTax  = String.valueOf(0.0625 * (Integer.valueOf(this.TaxableAmount)));
        if(dealItemRec.Lien_Payout__c != null && dealItemRec.Lien_Payout__c != 0) {
        	this.TradeInUnitLienPayout = formatToDecimal(lienPayout);
        }
        this.LienFinanceCompanyName = (dealItemRec.Finance_Company__r.Name != null ? dealItemRec.Finance_Company__r.Name : '');
        String LienFinanceCompanybillingStreet = (dealItemRec.Finance_Company__r.BillingStreet == null ) ? '' : dealItemRec.Finance_Company__r.BillingStreet;
        List<String> bsList = LienFinanceCompanybillingStreet.split('\n');
        this.LienFinanceCompanyAddress1 = (bsList.size() > 0) ? bsList[0].replace('\n', ' ') : '';
        this.LienFinanceCompanyAddress2 = (bsList.size() > 1) ? bsList[1].replace('\n', ' ') : '';
        this.LienFinanceCompanyAddress1and2 = this.LienFinanceCompanyAddress1 + ' ' + this.LienFinanceCompanyAddress2;
        this.LienFinanceCompanyCity = dealItemRec.Finance_Company__r.BillingCity != null ? dealItemRec.Finance_Company__r.BillingCity : '';
        this.LienFinanceCompanyState = dealItemRec.Finance_Company__r.BillingState != null ? dealItemRec.Finance_Company__r.BillingState : '';
        this.LienFinanceCompanyZipCode = dealItemRec.Finance_Company__r.BillingPostalCode != null ? dealItemRec.Finance_Company__r.BillingPostalCode : '';
        this.LienFinanceCompanyCityStateZipCode = this.LienFinanceCompanyCity + ' ' + this.LienFinanceCompanyState + ' ' + this.LienFinanceCompanyZipCode;

        this.TradeInUnitNetAllowance = formatToDecimal(agreedValue - lienPayout);

        Decimal tradeInTax = 0;
        Boolean isTaxIncludingPricing = GeneralConfiguration.getTaxIncludingPricing();
        dealItemRec.Agreed_Value__c = dealItemRec.Agreed_Value__c != null ? dealItemRec.Agreed_Value__c : 0;
        if(!isTaxIncludingPricing) {
            tradeInTax = ((dealItemRec.Agreed_Value__c * dealItemRec.Default_Unit_Sales_Tax_Percentage__c)/100).setScale(2, RoundingMode.HALF_UP);
        } else {
            tradeInTax = (dealItemRec.Agreed_Value__c - (dealItemRec.Agreed_Value__c / (1 + dealItemRec.Default_Unit_Sales_Tax_Percentage__c/100))).setScale(2, RoundingMode.HALF_UP);
        }

        this.TradeInSalesTaxesAmount = formatToDecimal(tradeInTax * -1);
        this.NetPurchasePrice = formatToDecimal((String.isNotBlank(this.UnitTotalPrice) ? (Decimal.valueOf(this.UnitTotalPrice.replaceAll(',',''))) : 0) - (String.isNotBlank(this.TradeInTotal) ? (Decimal.valueOf(this.TradeInTotal.replaceAll(',',''))) : 0 ));
    }

    public void setAllDealTradeInFields(List<Deal_Item__c> dealItemRecords) {
        Decimal agreedValue = 0;
        Decimal lienPayout = 0;
        for(Deal_Item__c  dealItemRec : dealItemRecords) {
            agreedValue += dealItemRec.Agreed_Value__c != null ? dealItemRec.Agreed_Value__c.setScale(2, RoundingMode.HALF_UP) : 0;
            lienPayout += dealItemRec.Lien_Payout__c != null ? dealItemRec.Lien_Payout__c.setScale(2, RoundingMode.HALF_UP) : 0;
        }    
        this.DealTotalTradeInsAmount = formatToDecimal(agreedValue);
        this.DealTotalLienPayoutAmount = formatToDecimal(lienPayout);
    }
    
    private String formatToDecimal(Decimal decVal) {
    	return BPUtility.formatToDecimal(decVal);
    }
    
    public void setOtherDealRelatedFields(Deal__c dealRec, List<CO_Deposit__c> dealDepositList, List<CO_Invoice_Payment__c> invoicePaymentList) {
    	Decimal totalAmount = 0;
    	if(dealRec.Invoice_Number__c != null) {
    		for(CO_Invoice_Payment__c paymentRec : invoicePaymentList) {
	    		if(paymentRec.Amount__c != null && !paymentRec.Payment_Method__c.equalsIgnoreCase(QBUtil.CHARGE_ACCOUNT) && 
	    				!paymentRec.Payment_Method__c.equalsIgnoreCase('Financing')) {
	    			totalAmount += paymentRec.Amount__c;
	    		}
	    	}
    	} else {
	    	for(CO_Deposit__c depositRec : dealDepositList) {
	    		if(depositRec.Deal__c != null && depositRec.Amount__c != null) {
	    			totalAmount += depositRec.Amount__c;
	    		}
	    	}
	    	for(CO_Invoice_Payment__c paymentRec : invoicePaymentList) {
	    		if(paymentRec.Amount__c != null) {
	    			totalAmount += paymentRec.Amount__c;
	    		}
	    	}
    	}
    	this.DealTotalAmountPaid = formatToDecimal(totalAmount);
    	this.DealTotalBalanceDue = formatToDecimal(dealRec.Deal_Total__c - totalAmount);
    	this.DealTotal = formatToDecimal(dealRec.Deal_Total__c != null ? dealRec.Deal_Total__c : 0);
    	this.DealAmountFinanced = formatToDecimal(dealRec.Amount_Financed__c != null ? dealRec.Amount_Financed__c : 0);
    	this.DealFinanceDownPayment = formatToDecimal(dealRec.Down_Payment__c != null ? dealRec.Down_Payment__c : 0);
    }
    
    private void setUnitMileageFields(Decimal mileageValue) {
        if(mileageValue != null) {
            Integer mileageValInt = Integer.valueOf(mileageValue.setScale(0, RoundingMode.HALF_UP));
            this.UnitOdometer = String.valueOf(mileageValInt);
            if(mileageValue > 0 && this.UnitOdometer.length() > 0) {
                Integer counter = this.UnitOdometer.length();
                this.UnitOdometer6 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
                this.UnitOdometer5 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
                this.UnitOdometer4 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
                this.UnitOdometer3 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
                this.UnitOdometer2 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
                this.UnitOdometer1 = (counter > 0 && this.UnitOdometer.length() >= counter) ? this.UnitOdometer.subString(counter - 1, counter--) : '';
            }
        }
    }
    
    private void setTradeInUnitMileageFields(Decimal mileageValue) {
        if(mileageValue != null && mileageValue.intValue() > 0) {
            String unitOdometerStr = this.TradeInUnitOdometer = String.valueOf(mileageValue.intValue());
            Integer counter = unitOdometerStr.length();
            this.TradeInUnitOdometer6 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
            this.TradeInUnitOdometer5 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
            this.TradeInUnitOdometer4 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
            this.TradeInUnitOdometer3 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
            this.TradeInUnitOdometer2 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
            this.TradeInUnitOdometer1 = (counter > 0 && unitOdometerStr.length() >= counter) ? unitOdometerStr.subString(counter - 1, counter--) : '';
        }
    }
    
    private void setUnitVINFields(String VINNumber) {
        if(String.isBlank(VINNumber)) {
            this.UnitVIN = 'VIN Unknown';
        } else {
            this.UnitVIN = VINNumber;
            Integer counter = 0;
            this.UnitVIN01 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN02 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN03 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN04 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN05 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN06 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN07 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN08 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN09 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN10 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN11 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN12 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN13 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN14 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN15 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN16 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN17 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN18 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
            this.UnitVIN19 = (this.UnitVIN.length() > counter) ? this.UnitVIN.subString(counter, ++counter) : '';
        }
    }

    private void setTradeInUnitVINFields(String VINNumber) {
        if(String.isBlank(VINNumber)) {
            this.TradeInUnitVIN = 'VIN Unknown';
        } else {
            this.TradeInUnitVIN = VINNumber;
            Integer counter = 0;
            this.TradeInUnitVIN01 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN02 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN03 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN04 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN05 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN06 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN07 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN08 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN09 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN10 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN11 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN12 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN13 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN14 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN15 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN16 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN17 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN18 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
            this.TradeInUnitVIN19 = (this.TradeInUnitVIN.length() > counter) ? this.TradeInUnitVIN.subString(counter, ++counter) : '';
        }
    }
    
    private Decimal getBasePrice(Deal_Unit_Price_Cost__c baseUnitPrice) {
        Decimal price = ((baseUnitPrice.Price__c != null) ? baseUnitPrice.Price__c : 0).setScale(2, RoundingMode.HALF_UP);
        Decimal taxRate = ((baseUnitPrice.Sales_Tax_Percentage__c != null) ? baseUnitPrice.Sales_Tax_Percentage__c : 0).setScale(2, RoundingMode.HALF_UP);
        Decimal salesTax = ((taxRate * price) / 100).setScale(2, RoundingMode.HALF_UP);
        
        if(GeneralConfiguration.getTaxIncludingPricing()) {
            price = (baseUnitPrice.Price_When_Tax_Included__c != null ? baseUnitPrice.Price_When_Tax_Included__c : (price + salesTax)).setScale(2, RoundingMode.HALF_UP);
        }
        return price;
    }
    
    private Decimal getOptionAndFeePrice(Option_Fee__c optionAndFeeRec) {
        Decimal totalPrice = (optionAndFeeRec.Price__c != null) ? optionAndFeeRec.Price__c.setScale(2, RoundingMode.HALF_UP) : 0.00;
        if(GeneralConfiguration.getTaxIncludingPricing()) {
        	Decimal taxRate = optionAndFeeRec.Sales_Tax_Percentage__c != null ? optionAndFeeRec.Sales_Tax_Percentage__c.setScale(4, RoundingMode.HALF_UP) : 0.00;
            totalPrice = (optionAndFeeRec.Price_When_Tax_Included__c != null) ? optionAndFeeRec.Price_When_Tax_Included__c.setScale(2, RoundingMode.HALF_UP) : 
                                            (totalPrice * (1 + taxRate /100)).setScale(2, RoundingMode.HALF_UP);
        }           
        totalPrice = totalPrice != null ? totalPrice : 0;
        Decimal qty = optionAndFeeRec.Qty__c != null ? optionAndFeeRec.Qty__c : 0;
        totalPrice = (totalPrice * qty).setScale(2, RoundingMode.HALF_UP);
        
        return totalPrice;
    }
    
    private static Decimal getTotalSalesTax(Deal_Item__c dealItemRec) {
    	return dealItemRec.Deal__r.Sales_Tax_Total__c != null ? dealItemRec.Deal__r.Sales_Tax_Total__c.setScale(2, RoundingMode.HALF_UP) : 0;
    }
    
    private Decimal getLoanTerm(Deal_Finance__c dealFinanceRec) {
    	if(dealFinanceRec.Loan_Term__c != null && dealFinanceRec.Term_Type__c != null && dealFinanceRec.Payment_Frequency__c != null) {
            if (dealFinanceRec.Term_Type__c == 'Months') {
                if (dealFinanceRec.Payment_Frequency__c == 'Monthly') {
                    return (dealFinanceRec.Loan_Term__c * 1);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Semi-Monthly') {
                    return (dealFinanceRec.Loan_Term__c * 2);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Weekly') {
                    return (dealFinanceRec.Loan_Term__c * 4.33);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Bi-Weekly') {
                    return (dealFinanceRec.Loan_Term__c * 2.16);
                } else if(dealFinanceRec.Payment_Frequency__c == 'Annual') {
                    return (dealFinanceRec.Loan_Term__c * 12);
                } else if(dealFinanceRec.Payment_Frequency__c == 'Bi-annual') {
                    return (dealFinanceRec.Loan_Term__c * 24);
                }
            } else if (dealFinanceRec.Term_Type__c == 'Years') {
                if (dealFinanceRec.Payment_Frequency__c == 'Monthly') {
                    return (dealFinanceRec.Loan_Term__c * 12);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Semi-Monthly') {
                    return (dealFinanceRec.Loan_Term__c * 24);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Weekly') {
                    return (dealFinanceRec.Loan_Term__c * 52);
                } else if (dealFinanceRec.Payment_Frequency__c == 'Bi-Weekly') {
                    return (dealFinanceRec.Loan_Term__c * 26);
                } else if(dealFinanceRec.Payment_Frequency__c == 'Annual') {
                    return (dealFinanceRec.Loan_Term__c);
                } else if(dealFinanceRec.Payment_Frequency__c == 'Bi-annual') {
                    return (dealFinanceRec.Loan_Term__c * 2 );
                }
            }
    	}
    	return 0;
    }
    
    private void setUnitFeeWithNoTagFields(Integer counter, String description, Decimal price) {
    	String priceStr = formatToDecimal(price);
    	
    	if(counter == 1) {
    		this.UnitFee1NoTagName = description;
    		this.UnitFee1NoTagPrice = priceStr;
    	} else if(counter == 2) {
    		this.UnitFee2NoTagName = description;
    		this.UnitFee2NoTagPrice = priceStr;
    	} else if(counter == 3) {
    		this.UnitFee3NoTagName = description;
    		this.UnitFee3NoTagPrice = priceStr;
    	} else if(counter == 4) {
    		this.UnitFee4NoTagName = description;
    		this.UnitFee4NoTagPrice = priceStr;
    	} else if(counter == 5) {
    		this.UnitFee5NoTagName = description;
    		this.UnitFee5NoTagPrice = priceStr;
    	} else if(counter == 6) {
    		this.UnitFee6NoTagName = description;
    		this.UnitFee6NoTagPrice = priceStr;
    	}
    }

    private void setUnitPartWithNoTagFields(Integer counter, String description, Decimal price) {
    	String priceStr = formatToDecimal(price);
    	
    	if(counter == 1) {
    		this.UnitPart1NoTagName = description;
        this.UnitPart1NoTagPrice = priceStr;
    	} else if(counter == 2) {
    		this.UnitPart2NoTagName = description;
        this.UnitPart2NoTagPrice = priceStr;
    	} else if(counter == 3) {
    		this.UnitPart3NoTagName = description;
        this.UnitPart3NoTagPrice = priceStr;
    	} else if(counter == 4) {
    		this.UnitPart4NoTagName = description;
        this.UnitPart4NoTagPrice = priceStr;
    	} else if(counter == 5) {
    		this.UnitPart5NoTagName = description;
        this.UnitPart5NoTagPrice = priceStr;
    	} else if(counter == 6) {
    		this.UnitPart6NoTagName = description;
        this.UnitPart6NoTagPrice = priceStr;
    	} else if(counter == 7) {
            this.UnitPart7NoTagName = description;
            this.UnitPart7NoTagPrice = priceStr;
        } else if(counter == 8) {
            this.UnitPart8NoTagName = description;
            this.UnitPart8NoTagPrice = priceStr;
        } else if(counter == 9) {
            this.UnitPart9NoTagName = description;
            this.UnitPart9NoTagPrice = priceStr;
        } else if(counter == 10) {
            this.UnitPart10NoTagName = description;
            this.UnitPart10NoTagPrice = priceStr;
        } else if(counter == 11) {
            this.UnitPart11NoTagName = description;
            this.UnitPart11NoTagPrice = priceStr;
        } else if(counter == 12) {
            this.UnitPart12NoTagName = description;
            this.UnitPart12NoTagPrice = priceStr;
        } else if(counter == 13) {
            this.UnitPart13NoTagName = description;
            this.UnitPart13NoTagPrice = priceStr;
        } else if(counter == 14) {
            this.UnitPart14NoTagName = description;
            this.UnitPart14NoTagPrice = priceStr;
        } else if(counter == 15) {
            this.UnitPart15NoTagName = description;
            this.UnitPart15NoTagPrice = priceStr;
        } else if(counter == 16) {
            this.UnitPart16NoTagName = description;
            this.UnitPart16NoTagPrice = priceStr;
        } else if(counter == 17) {
            this.UnitPart17NoTagName = description;
            this.UnitPart17NoTagPrice = priceStr;
        } else if(counter == 18) {
            this.UnitPart18NoTagName = description;
            this.UnitPart18NoTagPrice = priceStr;
        } else if(counter == 19) {
            this.UnitPart19NoTagName = description;
            this.UnitPart19NoTagPrice = priceStr;
        } else if(counter == 20) {
            this.UnitPart20NoTagName = description;
            this.UnitPart20NoTagPrice = priceStr;
        }
    }

    public void setUnitPreviousOwnerFields(List<Customer_Owned_Unit__c> similarUnits) {
        if(similarUnits.size() > 0){
            this.UnitPrevOwnerName = String.isNotBlank(similarUnits[0].Account__r.Name) ? similarUnits[0].Account__r.Name : '';
            
            String billingStreet = (similarUnits[0].Account__r.BillingStreet == null ) ? '' : similarUnits[0].Account__r.BillingStreet;
            List<String> bsList = billingStreet.split('\n');
            this.UnitPrevOwnerStreetAddress1 = (bsList.size() > 0) ? bsList[0].replace('\n', ' ') : '';
            this.UnitPrevOwnerStreetAddress2 = (bsList.size() > 1) ? bsList[1].replace('\n', ' ') : '';
            this.UnitPrevOwnerStreetAddress1and2 = this.UnitPrevOwnerStreetAddress1 + ' ' + this.UnitPrevOwnerStreetAddress2;
            
            this.UnitPrevOwnerCity = String.isNotBlank(similarUnits[0].Account__r.BillingCity) ? similarUnits[0].Account__r.BillingCity : '';
            this.UnitPrevOwnerState = String.isNotBlank(similarUnits[0].Account__r.BillingState) ? similarUnits[0].Account__r.BillingState : '';
            this.UnitPrevOwnerZIPCode = String.isNotBlank(similarUnits[0].Account__r.BillingPostalCode) ? similarUnits[0].Account__r.BillingPostalCode : '';
        } else {
            this.UnitPrevOwnerName = this.BusinessName;
            this.UnitPrevOwnerStreetAddress1 = this.BusinessAddressLine1;
            this.UnitPrevOwnerStreetAddress2 = this.BusinessAddressLine2;
            this.UnitPrevOwnerStreetAddress1and2 = this.BusinessAddress1and2;
            this.UnitPrevOwnerCity = this.BusinessCity;
            this.UnitPrevOwnerState = this.BusinessState;
            this.UnitPrevOwnerZIPCode = this.BusinessZipcode;
        }
        this.UnitPrevOwnerAddress = (String.isNotBlank(this.UnitPrevOwnerStreetAddress1and2) ? this.UnitPrevOwnerStreetAddress1and2 + ' ' : '' ) + (String.isNotBlank(this.UnitPrevOwnerCity) ? this.UnitPrevOwnerCity + ' ' : '' ) + (String.isNotBlank(this.UnitPrevOwnerState) ? this.UnitPrevOwnerState + ' ' : '' ) + (String.isNotBlank(this.UnitPrevOwnerZIPCode) ? this.UnitPrevOwnerZIPCode : '');
    }
    
    public void dealCalculatedField(){
		this.DifferenceOfTradeInTotalAndUnitTotal = formatToDecimal(( String.isNotBlank(this.WarrantyAndNoTagFeeUnitTotal) ? Decimal.valueOf(this.WarrantyAndNoTagFeeUnitTotal.replaceAll(',','')) : 0 ) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0 ));
		
		this.UnitTotalPriceAnd5OptionsPartFee = formatToDecimal(
		(String.isNotBlank(this.UnitTotalPriceLaborRegInsTagFee) ? Decimal.valueOf(this.UnitTotalPriceLaborRegInsTagFee.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.DealPartAndFeePrice1) ? Decimal.valueOf(this.DealPartAndFeePrice1.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.DealPartAndFeePrice2) ? Decimal.valueOf(this.DealPartAndFeePrice2.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.DealPartAndFeePrice3) ? Decimal.valueOf(this.DealPartAndFeePrice3.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.DealPartAndFeePrice4) ? Decimal.valueOf(this.DealPartAndFeePrice4.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.DealPartAndFeePrice5) ? Decimal.valueOf(this.DealPartAndFeePrice5.replaceAll(',','')) : 0));
		
        this.DifferenceOfUnitTotalPriceWithAllOptionsAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.UnitTotalPriceWithAllOptions) ? Decimal.valueOf(this.UnitTotalPriceWithAllOptions.replaceAll(',','')) : 0 ) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0 ));
        
		this.DealTotalDuePayble = formatToDecimal(
		(String.isNotBlank(this.UnitTotalPriceAnd5OptionsPartFee) ? Decimal.valueOf(this.UnitTotalPriceAnd5OptionsPartFee.replaceAll(',','')) : 0) - (String.isNotBlank(this.DealTotalAmountPaid) ? Decimal.valueOf(this.DealTotalAmountPaid.replaceAll(',','')) : 0) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0) - (String.isNotBlank(this.DealTotalLienPayoutAmount) ? Decimal.valueOf(this.DealTotalLienPayoutAmount.replaceAll(',','')) : 0));
		
        this.DifferenceOfUnitTotalPriceWithNonFeeOptionsAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.UnitTotalPriceWithNonFeeOptions) ? Decimal.valueOf(this.UnitTotalPriceWithNonFeeOptions.replaceAll(',','')) : 0 ) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0 ));
        
        this.TotalUnitPriceFeeOfCodeAndNoTagFee = formatToDecimal((String.isNotBlank(this.UnitTotalPrice) ? Decimal.valueOf(this.UnitTotalPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitFee1NoTagPrice) ? Decimal.valueOf(this.UnitFee1NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitFee2NoTagPrice) ? Decimal.valueOf(this.UnitFee2NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitFee3NoTagPrice) ? Decimal.valueOf(this.UnitFee3NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitFee4NoTagPrice) ? Decimal.valueOf(this.UnitFee4NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitFee5NoTagPrice) ? Decimal.valueOf(this.UnitFee5NoTagPrice.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.UnitFee6NoTagPrice) ? Decimal.valueOf(this.UnitFee6NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.DOCCodeUnitFee) ? Decimal.valueOf(this.DOCCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.TEFCodeUnitFee) ? Decimal.valueOf(this.TEFCodeUnitFee.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.FRTCodeUnitFee) ? Decimal.valueOf(this.FRTCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.PDICodeUnitFee) ? Decimal.valueOf(this.PDICodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.WARRCodeUnitFee) ? Decimal.valueOf(this.WARRCodeUnitFee.replaceAll(',','')) : 0));
		
		this.TotalDeliverPriceOfVehicle = formatToDecimal((String.isNotBlank(this.DifferenceOfTradeInTotalAndUnitTotal) ? Decimal.valueOf(this.DifferenceOfTradeInTotalAndUnitTotal.replaceAll(',','')) : 0) + (String.isNotBlank(this.StateCodeUnitFee) ? Decimal.valueOf(this.StateCodeUnitFee.replaceAll(',','')) : 0));
        this.SumOfBasePricePartsPriceAndFRTOUTFee = formatToDecimal(( String.isNotBlank(this.UnitTotalBasePrice) ? Decimal.valueOf(this.UnitTotalBasePrice.replaceAll(',','')) : 0 ) + (String.isNotBlank(this.TotalDealPartPrice) ? Decimal.valueOf(this.TotalDealPartPrice.replaceAll(',','')) : 0 ) + (String.isNotBlank(this.FRTOUTCodeUnitFee) ? Decimal.valueOf(this.FRTOUTCodeUnitFee.replaceAll(',','')) : 0 ));
        this.SumOfBasePricePartsPriceFRTOUTFeeAndDOCFee =  formatToDecimal(( String.isNotBlank(this.SumOfBasePricePartsPriceAndFRTOUTFee) ? Decimal.valueOf(this.SumOfBasePricePartsPriceAndFRTOUTFee.replaceAll(',','')) : 0 ) + (String.isNotBlank(this.DOCCodeUnitFee) ? Decimal.valueOf(this.DOCCodeUnitFee.replaceAll(',','')) : 0 ));
        this.DiffOfProdDealFinanceEstimatedPaymentAndLoanTermAndDealAmountFinanced = formatToDecimal((String.isNotBlank(this.ProductDealFinanceEstimatedPaymentAndLoanTerm) ? Decimal.valueOf(this.ProductDealFinanceEstimatedPaymentAndLoanTerm.replaceAll(',','')) : 0) - (String.isNotBlank(this.DealAmountFinanced) ? Decimal.valueOf(this.DealAmountFinanced.replaceAll(',','')) : 0));
        this.SumOfProdDealFinanceEstimatedPaymentAndLoanTermAndDealFinanceDownPayment = formatToDecimal((String.isNotBlank(this.ProductDealFinanceEstimatedPaymentAndLoanTerm) ? Decimal.valueOf(this.ProductDealFinanceEstimatedPaymentAndLoanTerm.replaceAll(',','')) : 0) + (String.isNotBlank(this.DealFinanceDownPayment) ? Decimal.valueOf(this.DealFinanceDownPayment.replaceAll(',','')) : 0));
        this.SumOfUnitTotalPriceAndSalesTax = formatToDecimal((String.isNotBlank(this.UnitTotalPrice) ? Decimal.valueOf(this.UnitTotalPrice.replaceAll(',','')) : 0) + (String.isNotBlank(this.UnitTotalSalesTax) ? Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',','')) : 0));
        this.SumOfTradeInTotalAndDealTotalAmountPaid = formatToDecimal((String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0) + (String.isNotBlank(this.DealTotalAmountPaid) ? Decimal.valueOf(this.DealTotalAmountPaid.replaceAll(',','')) : 0));
        this.DiffOfUnitTotalPriceWithSalesTaxAndTradeInTotalWithDealTotalAmountPaid = formatToDecimal((String.isNotBlank(this.SumOfUnitTotalPriceAndSalesTax) ? Decimal.valueOf(this.SumOfUnitTotalPriceAndSalesTax.replaceAll(',','')) : 0) - (String.isNotBlank(this.SumOfTradeInTotalAndDealTotalAmountPaid) ? Decimal.valueOf(this.SumOfTradeInTotalAndDealTotalAmountPaid.replaceAll(',','')) : 0));
        this.AmountFinancedTrakPowersports = formatToDecimal((String.isNotBlank(this.DiffOfUnitTotalPriceWithSalesTaxAndTradeInTotalWithDealTotalAmountPaid) ? Decimal.valueOf(this.DiffOfUnitTotalPriceWithSalesTaxAndTradeInTotalWithDealTotalAmountPaid.replaceAll(',','')) : 0) + (String.isNotBlank(this.SumOfFeesTrakPowersports) ? Decimal.valueOf(this.SumOfFeesTrakPowersports.replaceAll(',','')) : 0));
        this.SumOfFeesTrakPowersports = formatToDecimal((String.isNotBlank(this.GAPCodeUnitFee) ? Decimal.valueOf(this.GAPCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.GAPDescriptionPrice) ? Decimal.valueOf(this.GAPDescriptionPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.RegistrationFeeCodeUnitFee) ? Decimal.valueOf(this.RegistrationFeeCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.PlateTransferFeeCodeUnitFee) ? Decimal.valueOf(this.PlateTransferFeeCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.VINInspectionFeeCodeUnitFee) ? Decimal.valueOf(this.VINInspectionFeeCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.VINTradeFeeCodeUnitFee) ? Decimal.valueOf(this.VINTradeFeeCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.Title_FeeCodeUnitFee) ? Decimal.valueOf(this.Title_FeeCodeUnitFee.replaceAll(',','')) : 0)+
		(String.isNotBlank(this.ESCCodeUnitFee) ? Decimal.valueOf(this.ESCCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.DOCCodeUnitFee) ? Decimal.valueOf(this.DOCCodeUnitFee.replaceAll(',','')) : 0)+     
        (String.isNotBlank(this.NintyDay_WarrantyFeeCodeUnitFee) ? Decimal.valueOf(this.NintyDay_WarrantyFeeCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.Prepaid_MaintenanceFeeCodeUnitFee) ? Decimal.valueOf(this.Prepaid_MaintenanceFeeCodeUnitFee.replaceAll(',','')) : 0));
        
        this.TotalUnitPriceOfCodeAndNoTagPart = formatToDecimal((String.isNotBlank(this.UnitTotalPrice) ? Decimal.valueOf(this.UnitTotalPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart1NoTagPrice) ? Decimal.valueOf(this.UnitPart1NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart2NoTagPrice) ? Decimal.valueOf(this.UnitPart2NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart3NoTagPrice) ? Decimal.valueOf(this.UnitPart3NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart4NoTagPrice) ? Decimal.valueOf(this.UnitPart4NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart5NoTagPrice) ? Decimal.valueOf(this.UnitPart5NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart6NoTagPrice) ? Decimal.valueOf(this.UnitPart6NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.DOCCodeUnitFee) ? Decimal.valueOf(this.DOCCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.TEFCodeUnitFee) ? Decimal.valueOf(this.TEFCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.FRTCodeUnitFee) ? Decimal.valueOf(this.FRTCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.PDICodeUnitFee) ? Decimal.valueOf(this.PDICodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.WARRCodeUnitFee) ? Decimal.valueOf(this.WARRCodeUnitFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.DISCCodeUnitFee) ? Decimal.valueOf(this.DISCCodeUnitFee.replaceAll(',','')) : 0));

		this.DifferenceOfTotalUnitPriceCodeAndNoTagFeeAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.TotalUnitPriceFeeOfCodeAndNoTagFee) ? Decimal.valueOf(this.TotalUnitPriceFeeOfCodeAndNoTagFee.replaceAll(',','')) : 0 ) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0 ));
        this.DifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.TotalUnitPriceOfCodeAndNoTagPart) ? Decimal.valueOf(this.TotalUnitPriceOfCodeAndNoTagPart.replaceAll(',','')) : 0 ) - (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0 ));
		
		this.TotalSalesTaxAndDifferenceOfUnitPriceWithCodeAndNoTagFeeAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.UnitTotalSalesTax) ? Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',','')) : 0 ) + (String.isNotBlank(this.DifferenceOfTotalUnitPriceCodeAndNoTagFeeAndTradeInTotal) ? Decimal.valueOf(this.DifferenceOfTotalUnitPriceCodeAndNoTagFeeAndTradeInTotal.replaceAll(',','')) : 0 ));
        this.TotalSalesTaxAndDifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal = formatToDecimal(( String.isNotBlank(this.UnitTotalSalesTax) ? Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',','')) : 0 ) + (String.isNotBlank(this.DifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal) ? Decimal.valueOf(this.DifferenceOfTotalUnitPriceCodeAndNoTagPartAndTradeInTotal.replaceAll(',','')) : 0 ));
        this.DifferOfUnitTotalBasePriceAndDISCCodeUnitFee = formatToDecimal((String.isNotBlank(this.UnitTotalBasePrice) ? Decimal.valueOf(this.UnitTotalBasePrice.replaceAll(',','')) : 0) - (String.isNotBlank(this.DISCCodeUnitFee) ? Decimal.valueOf(this.DISCCodeUnitFee.replaceAll(',','')) : 0));
        this.SumOfTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeUnitFee = formatToDecimal((String.isNotBlank(this.UnitPart1NoTagPrice) ? Decimal.valueOf(this.UnitPart1NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart2NoTagPrice) ? Decimal.valueOf(this.UnitPart2NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart3NoTagPrice) ? Decimal.valueOf(this.UnitPart3NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart4NoTagPrice) ? Decimal.valueOf(this.UnitPart4NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart5NoTagPrice) ? Decimal.valueOf(this.UnitPart5NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart6NoTagPrice) ? Decimal.valueOf(this.UnitPart6NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart7NoTagPrice) ? Decimal.valueOf(this.UnitPart7NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart8NoTagPrice) ? Decimal.valueOf(this.UnitPart8NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.UnitPart9NoTagPrice) ? Decimal.valueOf(this.UnitPart9NoTagPrice.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.DifferOfUnitTotalBasePriceAndDISCCodeUnitFee) ? Decimal.valueOf(this.DifferOfUnitTotalBasePriceAndDISCCodeUnitFee.replaceAll(',','')) : 0));
        this.SumOfUnitTotalSalesTaxTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeFee = formatToDecimal((String.isNotBlank(this.UnitTotalSalesTax) ? Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.SumOfTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeUnitFee) ? Decimal.valueOf(this.SumOfTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeUnitFee.replaceAll(',','')) : 0));
        this.TotalPurchasePriceForFTruck = formatToDecimal((String.isNotBlank(this.SumOfUnitTotalSalesTaxTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeFee) ? Decimal.valueOf(this.SumOfUnitTotalSalesTaxTop9PartsPriceAndDifferOfUnitTotalBasePriceAndDISCCodeFee.replaceAll(',','')) : 0)+
        (String.isNotBlank(this.License1CodeUnitFee) ? Decimal.valueOf(this.License1CodeUnitFee.replaceAll(',','')) : 0));
        this.SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceAndDOCTagUnitFee = formatToDecimal((String.isNotBlank(this.UnitTotalBasePrice) ? Decimal.valueOf(this.UnitTotalBasePrice.replaceAll(',','')) : 0) +
        (String.isNotBlank(this.TradeInTotal) ? Decimal.valueOf(this.TradeInTotal.replaceAll(',','')) : 0) +
        (String.isNotBlank(this.NetPurchasePrice) ? Decimal.valueOf(this.NetPurchasePrice.replaceAll(',','')) : 0) +
        (String.isNotBlank(this.UnitFeeDOCTagUnitFee) ? Decimal.valueOf(this.UnitFeeDOCTagUnitFee.replaceAll(',','')) : 0));
        this.SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceDOCTagUnitFeeLICTagUnitFeeAndTotalSalesTax = formatToDecimal((String.isNotBlank(this.SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceAndDOCTagUnitFee) ? Decimal.valueOf(this.SumOfUnitTotalBasePriceTradeInTotalNetPurchasePriceAndDOCTagUnitFee.replaceAll(',','')) : 0) +
        (String.isNotBlank(this.UnitFeeLicTagUnitFee) ? Decimal.valueOf(this.UnitFeeLicTagUnitFee.replaceAll(',','')) : 0) +
        (String.isNotBlank(this.UnitTotalSalesTax) ? Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',','')) : 0));

        this.DifferenceOfNetPurchasePriceAndRebateFee = formatToDecimal((String.isNotBlank(this.UnitTotalBasePrice) ? (Decimal.valueOf(this.UnitTotalBasePrice.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.UnitTotalFactoryOptions) ? (Decimal.valueOf(this.UnitTotalFactoryOptions.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.UnitTotalDealerInstalledOptions) ? (Decimal.valueOf(this.UnitTotalDealerInstalledOptions.replaceAll(',',''))) : 0) -
        ((String.isNotBlank(this.TradeInTotal) ? (Decimal.valueOf(this.TradeInTotal.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.RebateCodeFeePrice) ? (Decimal.valueOf(this.RebateCodeFeePrice.replaceAll(',',''))) : 0 )));
        this.SumOfRegtTitleTranFeeAndSalesTax = formatToDecimal((String.isNotBlank(this.UnitFeeREGTagUnitFee) ? (Decimal.valueOf(this.UnitFeeREGTagUnitFee.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.UnitFeeTITLETagUnitFee) ? (Decimal.valueOf(this.UnitFeeTITLETagUnitFee.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.UnitTotalSalesTax) ? (Decimal.valueOf(this.UnitTotalSalesTax.replaceAll(',',''))) : 0) +
        (String.isNotBlank(this.UnitFeeTRANTagUnitFee) ? (Decimal.valueOf(this.UnitFeeTRANTagUnitFee.replaceAll(',',''))) : 0));
    }
}