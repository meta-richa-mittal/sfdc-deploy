<apex:page standardStylesheets="false" showChat="false" showHeader="false" controller="UserSettingCtrl" sidebar="false" applyHtmlTag="false" applyBodyTag="false" 
    contentType="application/javascript">

    define(['Routing_AppJs_PK'], function (Routing_AppJs_PK) {
        Routing_AppJs_PK.factory('UserPageService', ['$q', function ($q) {
        
        	return {
            	createClockingStaff: function(clockingStaffJSON){
	           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.createClockingStaff}',clockingStaffJSON);
	           	},
	           	getAllClockingStaff: function(){
	           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.getAllClockingStaff}');
	           	},
           		deleteClockingStaff: function(clockingStaffId){
           			return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.deleteClockingStaff}',clockingStaffId);
	           	},
	           	createUsers: function(UserJSON){
	           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.createUsers}',UserJSON);
	           	},
	           	getAllUsers: function(){
	           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.getAllUsers}');
	           	},
	           	editClockingStaff: function(clockingStaffJSON){
	           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.editClockingStaff}',clockingStaffJSON);
	           	},
           		editUsers: function(UserJSON){
           		return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.editUsers}',UserJSON);
           		},
				deleteUser: function(UserId){
           			return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.deleteUser}',UserId);
           		},	           	
	           	getMaxTrailUsers : function() { 
                    return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.getMaxTrailUsers}');
                },
				isMFAVerificationMethodRegistered: function(userId){
					return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.isMFAVerificationMethodRegistered}',userId);
				},
				deregisterMFAVerificationMethod: function(userId){
					return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.deregisterMFAVerificationMethod}',userId);
				},
				enableDisableMFA: function(userId, isEnable){
					return RemoteActionService($q, '{!$RemoteAction.UserSettingCtrl.enableDisableMFA}',userId, isEnable);
				}
            };
        }]);  
        return Routing_AppJs_PK;  
    }); 
</apex:page>