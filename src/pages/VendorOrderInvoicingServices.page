<apex:page standardStylesheets="false" showChat="false" showHeader="false" controller="VendorInvoicingCtrl"
    sidebar="false" applyHtmlTag="false" applyBodyTag="false" contentType="application/javascript">
     
    define(['Routing_AppJs_PK'], function (Routing_AppJs_PK) {
		
		Routing_AppJs_PK.factory('vendorOrderInvoicingService', ['$q', function ($q) {
		    return {
				    finalizeInvoiceAction: function(viHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
            			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.finalizeInvoiceAction}', viHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            validateUniqueInvoiceNumberForQB: function(entityValue)
		            {
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.validateUniqueInvoiceNumberForQB}', entityValue);
		            },
					validateBeforeFinalizeInvoice: function(invoiceNumber, vendorId) {
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.validateBeforeFinalizeInvoice}', invoiceNumber, vendorId);
					},
		            getVendorInvoicing: function(viHeaderId,vrHeaderId,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
            			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.getVendorInvoicingDetails}', viHeaderId,vrHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            addToItemsSubsection: function(viHeaderId,vrHeaderId,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
        				groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.addToItemsSubsection}', viHeaderId,vrHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            removeFromItemSubSection: function(viHeaderId,vrHeaderId,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
        				groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.removeFromItemSubSection}', viHeaderId,vrHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            updateVIHeader: function(viHeaderId, InvoiceNumber, InvoiceDateString,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		    			receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
		    			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.updateVIHeader}', viHeaderId,  InvoiceNumber,  InvoiceDateString, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            updateVIGroup: function(viHeaderId, vrHeaderId, jsonString,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	jsonString = angular.toJson(jsonString);
		    			receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
		    			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.updateVIGroup}', viHeaderId, vrHeaderId,jsonString, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            addOtherCharges: function(viHeaderId, feeId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		    			receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
		    			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.addOtherCharges}', viHeaderId, feeId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            updateOtherCharges: function(viHeaderId, jsonString, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	jsonString = angular.toJson(jsonString);
		    			receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
		    			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.updateOtherCharges}', viHeaderId, jsonString, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            deleteOtherCharges: function(viHeaderId, otherChargesId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		    			receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
		    			groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.deleteOtherCharges}', viHeaderId, otherChargesId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            addVendor: function(vendorId , viHeaderId,receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON)
		            {
		            	receivingPageSortAttrsJSON = angular.toJson(receivingPageSortAttrsJSON);
                		groupItemsPageSortAttrsJSON = angular.toJson(groupItemsPageSortAttrsJSON);
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.addVendor}', vendorId , viHeaderId, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
		            },
		            getPartRecord: function(partId)
		            {
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.getPartByPartId}', partId);
		            },
		            getVRHeaderDetails: function(vrHeaderId)
		            {
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.getVRDetailForPopUp}', vrHeaderId);
		            },
		            deleteVendorInvoice: function(viHeaderId)
		            {
		            	return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.deleteVendorOrderInvoicing}', viHeaderId);
		            },
					saveVIHeaderDetails: function(viHeaderJsonStr) {
						return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.saveVIHeaderDetails}', viHeaderJsonStr);
					},
					saveLCADataWithFinalizeInvoiceAction: function(viHeaderId, lcaJsonStr, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON) {
						return RemoteActionService($q, '{!$RemoteAction.VendorInvoicingCtrl.saveLCADataWithFinalizeInvoiceAction}', viHeaderId, lcaJsonStr, receivingPageSortAttrsJSON, groupItemsPageSortAttrsJSON);
					}
				};
             }]); 
                
         	return Routing_AppJs_PK;
         });
</apex:page>
