<apex:page standardStylesheets="false" showChat="false" showHeader="false" controller="ViewVendorRelatedListCtrl" sidebar="false" applyHtmlTag="false" applyBodyTag="false" 
    contentType="application/javascript">

    define(['Routing_AppJs_PK'], function (Routing_AppJs_PK) {
        Routing_AppJs_PK.factory('POTypesServices', ['$q', function ($q) {
            return {
            	addUpdatePOTypeToVendor: function(poTypesJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.addUpdatePOTypeToVendor}', angular.toJson(poTypesJSON));
	            },
	            updateDefaultPOType: function(vendorId, poTypeId, defaultValToUpdate){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.updateDefaultPOType}', vendorId, poTypeId, defaultValToUpdate);
	            },
	            removePOType: function(vendorId, alternatePartJunctionId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.removePOType}', vendorId, alternatePartJunctionId, angular.toJson(pageSortAttrsJSON));
	            },
	            getPaginatedPOTypesForVendor: function(vendorId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.getPaginatedPOTypesForVendor}', vendorId, angular.toJson(pageSortAttrsJSON));
	            }
            };
        }]);
        Routing_AppJs_PK.factory('ActiveOrdersServices', ['$q', function ($q) {
            return {
            	getPaginatedActiveOrdersForVendor: function(vendorId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.getPaginatedActiveOrdersForVendor}', vendorId, angular.toJson(pageSortAttrsJSON));
	            }
            };
        }]);
        Routing_AppJs_PK.factory('ContactsServices', ['$q', function ($q) {
            return {
            	updateContactRelation: function(vendorId, contactId, relationValueToUpdate){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.updateContactRelation}', vendorId, contactId, relationValueToUpdate);
	            },
	            removeContact: function(vendorId, contactId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.removeContact}', vendorId, contactId, angular.toJson(pageSortAttrsJSON));
	            },
	            getPaginatedContactsForVendor: function(vendorId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.getPaginatedContactsForVendor}', vendorId, angular.toJson(pageSortAttrsJSON));
	            }
            };
        }]);
        Routing_AppJs_PK.factory('ProductsServices', ['$q', function ($q) {
            return {
            	removeProduct: function(vendorId, productId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.removeProduct}', vendorId, productId, angular.toJson(pageSortAttrsJSON));
	            },
	            getPaginatedProductsForVendor: function(vendorId, pageSortAttrsJSON){
	                return RemoteActionService($q, '{!$RemoteAction.ViewVendorRelatedListCtrl.getPaginatedProductsForVendor}', vendorId, angular.toJson(pageSortAttrsJSON));
	            }
            };
        }]);
        return Routing_AppJs_PK;
    }); 
</apex:page>